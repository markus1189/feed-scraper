<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
  <category term="git" label="r/git"></category>
  <updated>2021-07-20T03:40:10+00:00</updated>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <id>/r/git.rss</id>
  <link rel="self" href="https://www.reddit.com/r/git.rss" type="application/atom+xml"></link>
  <link rel="alternate" href="https://www.reddit.com/r/git" type="text/html"></link>
  <logo>https://b.thumbs.redditmedia.com/Bw40GDos1awbwVMD5-ChpEuIISbIvbfoWdVJOrmPuHI.png</logo>
  <title>git</title>
  <entry>
    <author>
      <name>/u/AdImmediate8078</name>
      <uri>https://www.reddit.com/user/AdImmediate8078</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;One of our developers with a less performant computer is experiencing some major hemorrhaging while trying to branch/update some of our repos. Sometimes it can take up to 45 minutes for this guys computer to merge commits, while it only takes like 30 seconds-2minutes for mine. One thing we have done is create separate branches for storing legacy application versions (its not really useful to store them IMO, but we are, if this is causing the issue we will trim it down to a master and dev branch only).&lt;/p&gt; &lt;p&gt;For instance, we have a master branch representing whats in production, and many other branches like&lt;/p&gt; &lt;p&gt;master (main)&lt;/p&gt; &lt;p&gt;v1.0.0&lt;/p&gt; &lt;p&gt;v1.0.1&lt;/p&gt; &lt;p&gt;v1.0.2&lt;/p&gt; &lt;p&gt;...&lt;/p&gt; &lt;p&gt;v5.0.1&lt;/p&gt; &lt;p&gt;v5.0.2&lt;/p&gt; &lt;p&gt;...&lt;/p&gt; &lt;p&gt;v5.30.0&lt;/p&gt; &lt;p&gt;...&lt;/p&gt; &lt;p&gt;dev/feature-1&lt;/p&gt; &lt;p&gt;dev/feature-2&lt;/p&gt; &lt;p&gt;etc&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;could this format potentially be contributing to the issues this dev is experiencing? Especially if there are 25+ branches on some of these projects? And yes, some of these are large projects&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/AdImmediate8078"&gt; /u/AdImmediate8078 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/onkbgs/can_having_many_many_branches_on_a_git_repo_slow/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/onkbgs/can_having_many_many_branches_on_a_git_repo_slow/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_onkbgs</id>
    <link href="https://www.reddit.com/r/git/comments/onkbgs/can_having_many_many_branches_on_a_git_repo_slow/"></link>
    <updated>2021-07-19T18:41:09+00:00</updated>
    <published>2021-07-19T18:41:09+00:00</published>
    <title>Can having many many branches on a git repo slow down git?</title>
  </entry>
  <entry>
    <author>
      <name>/u/Advocatemack</name>
      <uri>https://www.reddit.com/user/Advocatemack</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Advocatemack"&gt; /u/Advocatemack &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://thinkinglabs.io/articles/2021/07/14/on-the-evilness-of-feature-branching-a-tale-of-two-teams.html"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/olc81m/on_the_evilness_of_feature_branching_a_tale_of/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_olc81m</id>
    <link href="https://www.reddit.com/r/git/comments/olc81m/on_the_evilness_of_feature_branching_a_tale_of/"></link>
    <updated>2021-07-16T07:50:54+00:00</updated>
    <published>2021-07-16T07:50:54+00:00</published>
    <title>On the Evilness of Feature Branching - A Tale of Two Teams</title>
  </entry>
  <entry>
    <author>
      <name>/u/AllezLesHabs21</name>
      <uri>https://www.reddit.com/user/AllezLesHabs21</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;So, a graphic representation:&lt;/p&gt; &lt;p&gt;&lt;code&gt; Main ---&amp;gt; Mods ---------------------------------&amp;gt; AddX - Changed Modal Size | - Add prettier to the code block - Changed alert timeout | &lt;/code&gt;&lt;/p&gt; &lt;p&gt;Then when I publish, push and create a PR from AddX to Main, the only changes would be that there is prettier added to the code block.&lt;/p&gt; &lt;p&gt;This is because I have added some mods to make my life easier, but they aren&amp;#39;t needed, it&amp;#39;s just a personal preference. Anything in AddX will not conflict with Mods.&lt;/p&gt; &lt;p&gt;I hope this makes sense and that it&amp;#39;s possible....&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/AllezLesHabs21"&gt; /u/AllezLesHabs21 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oi7fcn/help_i_created_a_branch_mods_based_on_main_main_i/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oi7fcn/help_i_created_a_branch_mods_based_on_main_main_i/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oi7fcn</id>
    <link href="https://www.reddit.com/r/git/comments/oi7fcn/help_i_created_a_branch_mods_based_on_main_main_i/"></link>
    <updated>2021-07-11T16:18:49+00:00</updated>
    <published>2021-07-11T16:18:49+00:00</published>
    <title>[Help] I created a branch (Mods) based on main (Main). I want to create a branch based on (Mods) called AddX, but then when I create a PR for AddX there is only the difference between AddX and Main in the PR. Is this possible?</title>
  </entry>
  <entry>
    <author>
      <name>/u/Andy-AO</name>
      <uri>https://www.reddit.com/user/Andy-AO</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;If you use Shell to list directly, the ignored files will also be included.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Andy-AO"&gt; /u/Andy-AO &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oh8k97/how_to_list_all_files_in_the_git_current_worktree/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oh8k97/how_to_list_all_files_in_the_git_current_worktree/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oh8k97</id>
    <link href="https://www.reddit.com/r/git/comments/oh8k97/how_to_list_all_files_in_the_git_current_worktree/"></link>
    <updated>2021-07-10T00:47:46+00:00</updated>
    <published>2021-07-10T00:47:46+00:00</published>
    <title>How to list all files in the git current worktree?</title>
  </entry>
  <entry>
    <author>
      <name>/u/BluebirdGold</name>
      <uri>https://www.reddit.com/user/BluebirdGold</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello Team!&lt;/p&gt; &lt;p&gt;I am working on creating a Git Hook that will lint the code in our java project before pushing the code to the remote repository. As I understand this is on the Local repository, hence a Local Hook. I created a Pre-commit hook script that will run a maven plugin that formats the code on pre-commit. However, my issue is that this script is not pushed to Bitbucket and stays under my .git. Also, I read on the Atlassian documentation I could link the .git/hook/myScript.sh to a directory available outside of .git folder. This, however, will require each contributor to create the link. The issue escalates as not every contributor uses the same OS.&lt;/p&gt; &lt;p&gt;For our JavaScript project, we use Husky to run the pre-push hook. Hence, it is shared by developers. &lt;/p&gt; &lt;p&gt;So my issue is to do the same with Java projects. maven-git-code-format is not that helpful.&lt;/p&gt; &lt;p&gt;We are using Bitbucket, Java 8, maven 3.8, JavaScript.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/BluebirdGold"&gt; /u/BluebirdGold &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/om75kr/create_a_git_hook_that_can_be_push_to_remote_and/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/om75kr/create_a_git_hook_that_can_be_push_to_remote_and/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_om75kr</id>
    <link href="https://www.reddit.com/r/git/comments/om75kr/create_a_git_hook_that_can_be_push_to_remote_and/"></link>
    <updated>2021-07-17T16:09:46+00:00</updated>
    <published>2021-07-17T16:09:46+00:00</published>
    <title>Create a git hook that can be push to remote and use by all contributors</title>
  </entry>
  <entry>
    <author>
      <name>/u/Coltonfei</name>
      <uri>https://www.reddit.com/user/Coltonfei</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Coltonfei"&gt; /u/Coltonfei &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://deanfei.medium.com/git-cherry-pick-all-developers-should-know-2cbdf27b7e55?sk=ba67673ba752c66d65c35d13a1167e64"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oe539m/really_clear_explanation_for_git_cherry_picking/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oe539m</id>
    <link href="https://www.reddit.com/r/git/comments/oe539m/really_clear_explanation_for_git_cherry_picking/"></link>
    <updated>2021-07-05T11:05:05+00:00</updated>
    <published>2021-07-05T11:05:05+00:00</published>
    <title>Really clear explanation for git cherry picking!!!</title>
  </entry>
  <entry>
    <author>
      <name>/u/CommonJoe-0101</name>
      <uri>https://www.reddit.com/user/CommonJoe-0101</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;What are the official areas of Git documentation? Or is there anything official?&lt;/p&gt; &lt;p&gt;From what I&amp;#39;ve read, the official documentation seems to be the &lt;a href="https://git-scm.com/book/en/v2"&gt;Git Pro book&lt;/a&gt;, the &lt;a href="https://mirrors.edge.kernel.org/pub/software/scm/git/docs/gitglossary.html"&gt;Git Glossary&lt;/a&gt;, and the man pages, although there seems to be some debate about what is considered official (especially with the Git Pro book).&lt;/p&gt; &lt;p&gt;Have I missed anything or am I incorrect in anything I&amp;#39;ve stated?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/CommonJoe-0101"&gt; /u/CommonJoe-0101 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oko5ru/what_is_the_official_documentation_for_git_users/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oko5ru/what_is_the_official_documentation_for_git_users/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oko5ru</id>
    <link href="https://www.reddit.com/r/git/comments/oko5ru/what_is_the_official_documentation_for_git_users/"></link>
    <updated>2021-07-15T07:53:13+00:00</updated>
    <published>2021-07-15T07:53:13+00:00</published>
    <title>What Is the Official Documentation for Git Users?</title>
  </entry>
  <entry>
    <author>
      <name>/u/CommonJoe-0101</name>
      <uri>https://www.reddit.com/user/CommonJoe-0101</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;What are the official areas of Git documentation? Or is there anything official?&lt;/p&gt; &lt;p&gt;From what I&amp;#39;ve read, the official documentation seems to be the &lt;a href="https://git-scm.com/book/en/v2"&gt;Pro Git book&lt;/a&gt;, the &lt;a href="https://mirrors.edge.kernel.org/pub/software/scm/git/docs/gitglossary.html"&gt;Git Glossary&lt;/a&gt;, and the man pages, although there seems to be some debate about what is considered official (especially with the Pro Git book).&lt;/p&gt; &lt;p&gt;Have I missed anything or am I incorrect in anything I&amp;#39;ve stated?&lt;/p&gt; &lt;p&gt;Edit: I meant &amp;quot;Pro Git book&amp;quot;, not &amp;quot;Git Pro book&amp;quot;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/CommonJoe-0101"&gt; /u/CommonJoe-0101 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oko5ru/what_is_the_official_documentation_for_git_users/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oko5ru/what_is_the_official_documentation_for_git_users/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oko5ru</id>
    <link href="https://www.reddit.com/r/git/comments/oko5ru/what_is_the_official_documentation_for_git_users/"></link>
    <updated>2021-07-15T07:53:13+00:00</updated>
    <published>2021-07-15T07:53:13+00:00</published>
    <title>What Is the Official Documentation for Git Users?</title>
  </entry>
  <entry>
    <author>
      <name>/u/DanielLMiranda</name>
      <uri>https://www.reddit.com/user/DanielLMiranda</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Here is what I&amp;#39;m trying to do: &lt;/p&gt; &lt;p&gt;I want to create a &lt;code&gt;.dotfiles&lt;/code&gt; repository on GitHub to (obviously) store all my config files. I created a Git repo at &lt;code&gt;$HOME&lt;/code&gt; and with an alias I&amp;#39;m setting the &lt;code&gt;--work-tree=/&lt;/code&gt; flag so I can &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;commit&lt;/code&gt; any file in the system. &lt;/p&gt; &lt;p&gt;It works, but it doesn&amp;#39;t add just the file into the repo, but all the folders before the file itself, like &lt;code&gt;/mnt/c/Users/username/.wslconfig&lt;/code&gt; (I&amp;#39;m using WSL2 on Windows 11), instead of just &lt;code&gt;.wslconfig&lt;/code&gt;. &lt;/p&gt; &lt;p&gt;I want to keep this repo public on GitHub so I don&amp;#39;t like the ideia of having my file system open to everyone. And having to navigate through a bunch of folders to get to a simple file is not ideal either. &lt;/p&gt; &lt;p&gt;I&amp;#39;m not a Git expert, so I might be trying to do something that&amp;#39;s not possible, or it is possible but I&amp;#39;m doing something wrong. Can someone help me with this? I Googled a lot but couldn&amp;#39;t find anything useful.&lt;br/&gt; Thanks in advance!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/DanielLMiranda"&gt; /u/DanielLMiranda &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odvodb/how_to_add_files_without_the_folders_path_in/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odvodb/how_to_add_files_without_the_folders_path_in/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_odvodb</id>
    <link href="https://www.reddit.com/r/git/comments/odvodb/how_to_add_files_without_the_folders_path_in/"></link>
    <updated>2021-07-04T23:41:59+00:00</updated>
    <published>2021-07-04T23:41:59+00:00</published>
    <title>How to add files without the folders path in which the file is in?</title>
  </entry>
  <entry>
    <author>
      <name>/u/Eaten_Sandwich</name>
      <uri>https://www.reddit.com/user/Eaten_Sandwich</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hopefully this is the right place to post this. There&amp;#39;s no gitextensions subreddit AFAIK, nor any forums for it.&lt;/p&gt; &lt;p&gt;I&amp;#39;ve been trying to get gitextensions to recognize my github account and be able to clone my repos and push/pull to them. I went through &lt;a href="https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token"&gt;Creating a Personal Access Token&lt;/a&gt;, followed it exactly, and copied the token to Plugins&amp;gt;GitHub in git extensions.&lt;/p&gt; &lt;p&gt;Still, whenever I try to clone a repo, git extensions lists no repos under my account and instead says &amp;quot;Exception: no authentication details.&amp;quot; &amp;quot;This most likely means you didn&amp;#39;t configure GitHub, please do so via the menu &amp;#39;Plugins/GitHub.&amp;#39;&amp;quot;&lt;/p&gt; &lt;p&gt;That&amp;#39;s a pretty shit error, because the only field in Plugins/GitHub is the OAuth token, which is already filled in accordance with the link above.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Eaten_Sandwich"&gt; /u/Eaten_Sandwich &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oh545l/git_extensions_no_authentication_details/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oh545l/git_extensions_no_authentication_details/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oh545l</id>
    <link href="https://www.reddit.com/r/git/comments/oh545l/git_extensions_no_authentication_details/"></link>
    <updated>2021-07-09T21:27:18+00:00</updated>
    <published>2021-07-09T21:27:18+00:00</published>
    <title>git extensions: no authentication details</title>
  </entry>
  <entry>
    <author>
      <name>/u/ElektricPrimate</name>
      <uri>https://www.reddit.com/user/ElektricPrimate</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi all! Having a little brain fart here and looking for some advice. Currently I have a business app that is composed of over 40 repositories. As of now all repositories are under the same version number due to a decision and automation that was put in place long before I onboarded to the project. &lt;/p&gt; &lt;p&gt;I would like to move to a more independent versioning scheme for each repo that is not tied directly to an overall master version. &lt;/p&gt; &lt;p&gt;Ultimate goal is to decouple all of these down the road and enable independent deploys. However, taking baby steps here because change is scary for some. &lt;/p&gt; &lt;p&gt;Is there a way to map these 40 repos separate versions to a master version that will end up being released out to our customers?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/ElektricPrimate"&gt; /u/ElektricPrimate &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oga7wx/need_some_advice_managing_multiple_repos_with/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oga7wx/need_some_advice_managing_multiple_repos_with/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oga7wx</id>
    <link href="https://www.reddit.com/r/git/comments/oga7wx/need_some_advice_managing_multiple_repos_with/"></link>
    <updated>2021-07-08T16:01:44+00:00</updated>
    <published>2021-07-08T16:01:44+00:00</published>
    <title>Need some advice managing multiple repos with separate versioning</title>
  </entry>
  <entry>
    <author>
      <name>/u/FOSSilized_D43mon</name>
      <uri>https://www.reddit.com/user/FOSSilized_D43mon</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello,&lt;/p&gt; &lt;p&gt;I recently rewrote the aliases I use in my shell, &lt;code&gt;zsh&lt;/code&gt;, to keep things clean and well organized. I added and updated a lot of my &lt;code&gt;git&lt;/code&gt; aliases to keep my workflow consistent and clean, but sadly since I have made my changes I keep running into a very, very, &lt;strong&gt;very&lt;/strong&gt; annoying issue.&lt;/p&gt; &lt;p&gt;The TL;DR is that, from what I can find researching, HEAD keeps becoming detached. I have been updating many of my configuration files and in the process I have gotten to use three of my &lt;code&gt;git&lt;/code&gt; aliases&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;&lt;a href="https://gitlab.com/FOSSilized_Daemon/dotfiles/-/blob/master/src/configs/zsh/zsh-script/alias.zsh#L324"&gt;ga (git add)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;a href="https://gitlab.com/FOSSilized_Daemon/dotfiles/-/blob/master/src/configs/zsh/zsh-script/alias.zsh#L393"&gt;gc (git commit)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;a href="https://gitlab.com/FOSSilized_Daemon/dotfiles/-/blob/master/src/configs/zsh/zsh-script/alias.zsh#L320"&gt;gp (git push)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I have tried debugging, more debugging, and &lt;strong&gt;even more debugging&lt;/strong&gt;, but for the life of me can not determine which of these aliases is causing HEAD to detach. I have not changed &lt;em&gt;anything&lt;/em&gt; else about my repository settings except changing my aliases. Does anyone have any idea why this keeps happening? Whenever I push local changes to my repository I get this message&lt;/p&gt; &lt;p&gt;= [up to date] master -&amp;gt; master updating local tracking ref &amp;#39;refs/remotes/origin/master&amp;#39; Everything up-to-date&lt;/p&gt; &lt;p&gt;and nothing is pushed to my remote repository &lt;strong&gt;even though there are local changes staged for commit&lt;/strong&gt;.&lt;/p&gt; &lt;h4&gt;Update&lt;/h4&gt; &lt;p&gt;For some reason having &lt;code&gt;git_commit&lt;/code&gt; was the issue, reailiased &lt;code&gt;gc&lt;/code&gt; to &lt;code&gt;alias gc=&amp;#39;git commit -m&lt;/code&gt; and now it works.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/FOSSilized_D43mon"&gt; /u/FOSSilized_D43mon &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omf6is/head_keeps_becoming_detached/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omf6is/head_keeps_becoming_detached/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_omf6is</id>
    <link href="https://www.reddit.com/r/git/comments/omf6is/head_keeps_becoming_detached/"></link>
    <updated>2021-07-17T23:31:40+00:00</updated>
    <published>2021-07-17T23:31:40+00:00</published>
    <title>HEAD Keeps Becoming Detached?!</title>
  </entry>
  <entry>
    <author>
      <name>/u/FOSSilized_D43mon</name>
      <uri>https://www.reddit.com/user/FOSSilized_D43mon</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello,&lt;/p&gt; &lt;p&gt;I recently rewrote the aliases I use in my shell, &lt;code&gt;zsh&lt;/code&gt;, to keep things clean and well organized. I added and updated a lot of my &lt;code&gt;git&lt;/code&gt; aliases to keep my workflow consistent and clean, but sadly since I have made my changes I keep running into a very, very, &lt;strong&gt;very&lt;/strong&gt; annoying issue.&lt;/p&gt; &lt;p&gt;The TL;DR is that, from what I can find researching, HEAD keeps becoming detached. I have been updating many of my configuration files and in the process I have gotten to use three of my &lt;code&gt;git&lt;/code&gt; aliases&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;&lt;a href="https://gitlab.com/FOSSilized_Daemon/dotfiles/-/blob/master/src/configs/zsh/zsh-script/alias.zsh#L324"&gt;ga (git add)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;a href="https://gitlab.com/FOSSilized_Daemon/dotfiles/-/blob/master/src/configs/zsh/zsh-script/alias.zsh#L393"&gt;gc (git commit)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;a href="https://gitlab.com/FOSSilized_Daemon/dotfiles/-/blob/master/src/configs/zsh/zsh-script/alias.zsh#L320"&gt;gp (git push)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I have tried debugging, more debugging, and &lt;strong&gt;even more debugging&lt;/strong&gt;, but for the life of me can not determine which of these aliases is causing HEAD to detach. I have not changed &lt;em&gt;anything&lt;/em&gt; else about my repository settings except changing my aliases. Does anyone have any idea why this keeps happening?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/FOSSilized_D43mon"&gt; /u/FOSSilized_D43mon &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omf6is/head_keeps_becoming_detached/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omf6is/head_keeps_becoming_detached/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_omf6is</id>
    <link href="https://www.reddit.com/r/git/comments/omf6is/head_keeps_becoming_detached/"></link>
    <updated>2021-07-17T23:31:40+00:00</updated>
    <published>2021-07-17T23:31:40+00:00</published>
    <title>HEAD Keeps Becoming Detached?!</title>
  </entry>
  <entry>
    <author>
      <name>/u/Free4Tutorials</name>
      <uri>https://www.reddit.com/user/Free4Tutorials</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Free4Tutorials"&gt; /u/Free4Tutorials &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="/r/Docker_DevOps/comments/olhgyx/start_from_beginner_in_cicd_and_end_writing_a/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/olzc7s/start_from_beginner_in_cicd_and_end_writing_a/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_olzc7s</id>
    <link href="https://www.reddit.com/r/git/comments/olzc7s/start_from_beginner_in_cicd_and_end_writing_a/"></link>
    <updated>2021-07-17T06:59:14+00:00</updated>
    <published>2021-07-17T06:59:14+00:00</published>
    <title>Start from beginner in CICD and end writing a Jenkins pipeline as code and deploy your application to docker container.</title>
  </entry>
  <entry>
    <author>
      <name>/u/Free4Tutorials</name>
      <uri>https://www.reddit.com/user/Free4Tutorials</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Free4Tutorials"&gt; /u/Free4Tutorials &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://youtu.be/T8Ds409jQLM"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ocz39a/git_basic_commands_git_tutorial_for_beginners/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ocz39a</id>
    <link href="https://www.reddit.com/r/git/comments/ocz39a/git_basic_commands_git_tutorial_for_beginners/"></link>
    <updated>2021-07-03T14:28:05+00:00</updated>
    <published>2021-07-03T14:28:05+00:00</published>
    <title>Git Basic Commands | Git Tutorial for Beginners</title>
  </entry>
  <entry>
    <author>
      <name>/u/Free4Tutorials</name>
      <uri>https://www.reddit.com/user/Free4Tutorials</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Started a new video tutorial series for Gitlab CICD. Please check and give your feedback. &lt;/p&gt; &lt;p&gt;&lt;a href="https://youtu.be/DWb1HNmbmeM"&gt;https://youtu.be/DWb1HNmbmeM&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/z7gdxokbo7a71.png?width=923&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=06e50b6c94db2f5574717931bafa24e5c1875382"&gt;https://preview.redd.it/z7gdxokbo7a71.png?width=923&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=06e50b6c94db2f5574717931bafa24e5c1875382&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Free4Tutorials"&gt; /u/Free4Tutorials &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogysro/gitlab_ci_cd_tutorial_for_beginners_getting/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogysro/gitlab_ci_cd_tutorial_for_beginners_getting/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ogysro</id>
    <link href="https://www.reddit.com/r/git/comments/ogysro/gitlab_ci_cd_tutorial_for_beginners_getting/"></link>
    <updated>2021-07-09T16:09:59+00:00</updated>
    <published>2021-07-09T16:09:59+00:00</published>
    <title>Gitlab CI CD Tutorial For Beginners | Getting Started with Gitlab and CICD</title>
  </entry>
  <entry>
    <author>
      <name>/u/FreshElite</name>
      <uri>https://www.reddit.com/user/FreshElite</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/FreshElite"&gt; /u/FreshElite &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://github.com/TechPenguineer/Hypermc"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omes19/help_needed_c/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_omes19</id>
    <link href="https://www.reddit.com/r/git/comments/omes19/help_needed_c/"></link>
    <updated>2021-07-17T23:05:42+00:00</updated>
    <published>2021-07-17T23:05:42+00:00</published>
    <title>Help needed ( c# )</title>
  </entry>
  <entry>
    <author>
      <name>/u/FreshP_0325X</name>
      <uri>https://www.reddit.com/user/FreshP_0325X</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;(Tested on git 2.25.1-ubuntu)&lt;/p&gt; &lt;p&gt;Unlike curl, git cannot disable SSL &lt;strong&gt;&lt;em&gt;proxy&lt;/em&gt;&lt;/strong&gt; certificate verification. GIT_SSL_NO_VERIFY=1 disables server verification, but there is no way to disable proxy verification.&lt;/p&gt; &lt;p&gt;Is there a git build that can fully disable certificate verification? Or how to modify git makefile or source code to be able to fully disable certificate verification?&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;My network is censored and I must use SSL proxy, however git rejects it because it is self-signed.&lt;/p&gt; &lt;p&gt;It is a huge pain because git clone fails everywhere in 3rd party installation scripts or tools, and I must hand modify every of them to get them work.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/FreshP_0325X"&gt; /u/FreshP_0325X &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/og2ivp/how_to_completely_disable_ssl_certificate/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/og2ivp/how_to_completely_disable_ssl_certificate/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_og2ivp</id>
    <link href="https://www.reddit.com/r/git/comments/og2ivp/how_to_completely_disable_ssl_certificate/"></link>
    <updated>2021-07-08T07:43:35+00:00</updated>
    <published>2021-07-08T07:43:35+00:00</published>
    <title>How to completely disable SSL certificate verification?</title>
  </entry>
  <entry>
    <author>
      <name>/u/Grizzly-coder</name>
      <uri>https://www.reddit.com/user/Grizzly-coder</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi all,&lt;/p&gt; &lt;p&gt;We have jenkins jobs that create a tag and push them to git for production builds, time to time &lt;code&gt;git push origin &amp;lt;TAG&amp;gt;&lt;/code&gt; fails without any errors. No tag is created in Github and Jenkins job fails on this step.&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;Has anyone seen this? How can i solve it?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Grizzly-coder"&gt; /u/Grizzly-coder &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oer45b/git_push_origin_tag_fails_without_any_errors/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oer45b/git_push_origin_tag_fails_without_any_errors/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oer45b</id>
    <link href="https://www.reddit.com/r/git/comments/oer45b/git_push_origin_tag_fails_without_any_errors/"></link>
    <updated>2021-07-06T08:55:38+00:00</updated>
    <published>2021-07-06T08:55:38+00:00</published>
    <title>Git push origin &lt;TAG&gt; fails without any errors</title>
  </entry>
  <entry>
    <author>
      <name>/u/Hamdoulillah</name>
      <uri>https://www.reddit.com/user/Hamdoulillah</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;m new to learning about web development, and have just started to learn today about Git and Github for the first time. &lt;/p&gt; &lt;p&gt;I&amp;#39;ve learned that Git is a VCS that allows team members to work independently on the files of a project and later merge those files together so that Git keeps track of all the changes everyone has added. I only understand how Git can keep something locally (on my own computer). I don&amp;#39;t understand though how it can have a remote repository that many people can work on, as it is not a cloud-based VCS like Github.&lt;/p&gt; &lt;p&gt;Please also correct me if I misunderstood something or said something wrong.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Hamdoulillah"&gt; /u/Hamdoulillah &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/olqhhw/how_does_git_allow_collaboration_between_team/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/olqhhw/how_does_git_allow_collaboration_between_team/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_olqhhw</id>
    <link href="https://www.reddit.com/r/git/comments/olqhhw/how_does_git_allow_collaboration_between_team/"></link>
    <updated>2021-07-16T21:29:44+00:00</updated>
    <published>2021-07-16T21:29:44+00:00</published>
    <title>How does Git allow collaboration between team members?</title>
  </entry>
  <entry>
    <author>
      <name>/u/InvictusJoker</name>
      <uri>https://www.reddit.com/user/InvictusJoker</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;So, in my workflow I work on multiple feature branches, and I will &lt;code&gt;git rebase master&lt;/code&gt; whenever there are any new pushes to master so my branches is most up to date. Then, at the end when the branches are done, I will create a new branch, say &lt;code&gt;complete&lt;/code&gt; off master, and merge all the feature branches into that one branch, ie &lt;code&gt;git checkout -b complete&lt;/code&gt;, &lt;code&gt;git merge feature1&lt;/code&gt; &lt;code&gt;git merge feature2&lt;/code&gt;, etc.&lt;/p&gt; &lt;p&gt;Is this a good way of using the two commands?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/InvictusJoker"&gt; /u/InvictusJoker &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogwmtc/git_rebase_vs_merge_use_cases/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogwmtc/git_rebase_vs_merge_use_cases/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ogwmtc</id>
    <link href="https://www.reddit.com/r/git/comments/ogwmtc/git_rebase_vs_merge_use_cases/"></link>
    <updated>2021-07-09T14:24:31+00:00</updated>
    <published>2021-07-09T14:24:31+00:00</published>
    <title>Git Rebase vs. Merge use cases</title>
  </entry>
  <entry>
    <author>
      <name>/u/JopRillos2001</name>
      <uri>https://www.reddit.com/user/JopRillos2001</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;When I push to my GitLab my pipeline failes with the following error:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Building dependency tree... Reading state information... Package mysql-client is not available, but is referred to by another package. This may mean that the package is missing, has been obsoleted, or is only available from another source E: Package &amp;#39;mysql-client&amp;#39; has no installation candidate Cleaning up file based variables ERROR: Job failed: exit code 1 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Im fairly new to this, what can I do to fix this? Its a NodeJS project&lt;/p&gt; &lt;p&gt;Im not using docker or linux&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/JopRillos2001"&gt; /u/JopRillos2001 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogar4g/gitlab_pipeline_error_package_mysqlclient_has_no/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogar4g/gitlab_pipeline_error_package_mysqlclient_has_no/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ogar4g</id>
    <link href="https://www.reddit.com/r/git/comments/ogar4g/gitlab_pipeline_error_package_mysqlclient_has_no/"></link>
    <updated>2021-07-08T16:27:45+00:00</updated>
    <published>2021-07-08T16:27:45+00:00</published>
    <title>GitLab pipeline error: Package 'mysql-client' has no installation candidate. What can I do?</title>
  </entry>
  <entry>
    <author>
      <name>/u/JuanDiego-Arenas</name>
      <uri>https://www.reddit.com/user/JuanDiego-Arenas</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/JuanDiego-Arenas"&gt; /u/JuanDiego-Arenas &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://i.redd.it/yxrbo9ws2t971.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ofkp1n/i_have_a_problem_with_git_it_does_not_want_to/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ofkp1n</id>
    <link href="https://www.reddit.com/r/git/comments/ofkp1n/i_have_a_problem_with_git_it_does_not_want_to/"></link>
    <updated>2021-07-07T15:04:24+00:00</updated>
    <published>2021-07-07T15:04:24+00:00</published>
    <title>I have a problem with git, it does not want to upload the files to the repository, it stays like this and does not load anything for the GitHub login does anyone know how to fix that?</title>
  </entry>
  <entry>
    <author>
      <name>/u/Juke_Box_Guitar_Hero</name>
      <uri>https://www.reddit.com/user/Juke_Box_Guitar_Hero</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi everyone, I am trying to write a bash script that is going to sync a very long list of git repositories. Is there a way to run git checkout &amp;lt;commit&amp;gt; on a repository from outside that repo on the command line?&lt;/p&gt; &lt;p&gt;ex: I want to run git checkout 9aee39... on a repo named reddit/askprogramming/post, and I&amp;#39;m in directory root (with the full path being root/reddit/askprogramming/post) is there any way to run this command on this repo without navigating to root/reddit/askprogramming/post first? The issue I&amp;#39;m having is my script can normally navigate to this repo and then run the command by just&lt;/p&gt; &lt;p&gt;cd reddit/askprogramming/post&lt;/p&gt; &lt;p&gt;git checkout &amp;lt;commit&amp;gt;&lt;/p&gt; &lt;p&gt;but this doesn&amp;#39;t work with all of my repos, as some of them are named something slightly different (e.g. repo name: reddit/ask_programming/post and actual path is reddit/ask/programming/post or other variations)&lt;/p&gt; &lt;p&gt;thanks!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Juke_Box_Guitar_Hero"&gt; /u/Juke_Box_Guitar_Hero &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oii5m1/how_to_git_checkout_commit_on_repo_from_command/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oii5m1/how_to_git_checkout_commit_on_repo_from_command/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oii5m1</id>
    <link href="https://www.reddit.com/r/git/comments/oii5m1/how_to_git_checkout_commit_on_repo_from_command/"></link>
    <updated>2021-07-12T02:30:44+00:00</updated>
    <published>2021-07-12T02:30:44+00:00</published>
    <title>How to git checkout &lt;commit&gt; on repo from command line while in a directory outside of the repo?</title>
  </entry>
  <entry>
    <author>
      <name>/u/Lootdit</name>
      <uri>https://www.reddit.com/user/Lootdit</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://renewedvision.com/propresenter"&gt;ProPresenter&lt;/a&gt; is a presentation software that is different than PowerPoint on how it stores files. I was just wondering if git would get bloated or anything like that with this software. In the past, There have been instances where files accidentally get replaced with outdated versions or files that need deleting don&amp;#39;t get deleted. Due to the fact that we are using a directory synced through onedrive and the syncing method that the software uses only can replace the files but can&amp;#39;t delete them. Other times people forget to update their own directories so things get replaced by older versions. The basis of how files are stored is that there are presentations that are under the .pro file format, playlists that are under a single file, and configuration files in a similar matter. I asked this question in ProPresenter Facebook group and sub, they had no idea what git was. So i come here to ask, is git a good solution?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Lootdit"&gt; /u/Lootdit &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odyuah/how_well_will_software_like_propresenter_work/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odyuah/how_well_will_software_like_propresenter_work/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_odyuah</id>
    <link href="https://www.reddit.com/r/git/comments/odyuah/how_well_will_software_like_propresenter_work/"></link>
    <updated>2021-07-05T03:25:28+00:00</updated>
    <published>2021-07-05T03:25:28+00:00</published>
    <title>How well will software like ProPresenter work with git?</title>
  </entry>
  <entry>
    <author>
      <name>/u/MohnJaddenPowers</name>
      <uri>https://www.reddit.com/user/MohnJaddenPowers</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;ve got a Github account and a repo named azureterraform. I was able to clone the repo in VS Code and create a branch via clicking main -&amp;gt; create new branch. I created some files, staged them, and committed them. &lt;/p&gt; &lt;p&gt;When I try to do git pull it asks me to specify a remote and origin. If I do git pull azureterraform Working-branch-name, it errors out:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;fatal: &amp;#39;azureterraform&amp;#39; does not appear to be a git repository fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists. &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Same error if I do git pull azureterraform main. &lt;/p&gt; &lt;p&gt;git fetch appears to run, but git merge errors out saying there&amp;#39;s no remote for the current branch. &lt;/p&gt; &lt;p&gt;I&amp;#39;m not sure what to do to proceed here - my google-fu fails me at finding anything other than what git pull is supposed to do. Can I get some advice on how to proceed?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/MohnJaddenPowers"&gt; /u/MohnJaddenPowers &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odvgmo/noob_question_i_created_a_branch_and_committed/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odvgmo/noob_question_i_created_a_branch_and_committed/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_odvgmo</id>
    <link href="https://www.reddit.com/r/git/comments/odvgmo/noob_question_i_created_a_branch_and_committed/"></link>
    <updated>2021-07-04T23:27:57+00:00</updated>
    <published>2021-07-04T23:27:57+00:00</published>
    <title>Noob question: I created a branch and committed code to it, but I can't git pull it</title>
  </entry>
  <entry>
    <author>
      <name>/u/MotorBoats</name>
      <uri>https://www.reddit.com/user/MotorBoats</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;ve only recently taken advantage of version control and gotten a really good workflow with my work, branching and commits. So far I&amp;#39;ve only done single project repos, but now I am working on 2 projects: one is a front end CRUD dashboard and the other is the graphql API it depends on. I built each one separately, each in it&amp;#39;s own repo at the beginning, but am at the point where the frontend depend heavily on the backend, and I&amp;#39;m working on dockerizing them together (a whole different story).&lt;/p&gt; &lt;p&gt;Right now the projects are siblings in the same folder, but again, each project has it&amp;#39;s own repo and was initialized separately from each other. Like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Fullstack | └- API-Backend-Project | └ .git | └ package.json | └- Frontend-Project └ .git └ package.json &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;I guess what I&amp;#39;m asking is, how do you guys manage projects this way? Do you have a single repo in the sibling&amp;#39;s parent folder, and if you use vscode, is it a single workspace? Or do you git init each project separately in their own folder, and have a single vscode workspace starting in the parent folder that contains each projects folder? I want to wrap my head around this and make sure I&amp;#39;m doing it correctly, and the most efficiently. Any repo examples would be appreciated.&lt;/p&gt; &lt;p&gt;I know I could make it a single project and repo, with one folder for the &lt;code&gt;api&lt;/code&gt; and one for the &lt;code&gt;frontend&lt;/code&gt;, but I have future projects that may depend on that API as well. I want to make sure I don&amp;#39;t paint myself into a corner.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/MotorBoats"&gt; /u/MotorBoats &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/om53pc/sibling_projects_in_same_root_but_separate_repos/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/om53pc/sibling_projects_in_same_root_but_separate_repos/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_om53pc</id>
    <link href="https://www.reddit.com/r/git/comments/om53pc/sibling_projects_in_same_root_but_separate_repos/"></link>
    <updated>2021-07-17T14:17:41+00:00</updated>
    <published>2021-07-17T14:17:41+00:00</published>
    <title>Sibling projects in same root, but separate repos</title>
  </entry>
  <entry>
    <author>
      <name>/u/MotorcycleMayor</name>
      <uri>https://www.reddit.com/user/MotorcycleMayor</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Well, once again the Visual Studio demons of git have bitten me in the butt. I can&amp;#39;t tell you how many times I&amp;#39;ve run into problems I have to work around with the built-in git client in VS 2019. &lt;/p&gt; &lt;p&gt;From broken tooltips implying you&amp;#39;re going to merge a branch onto itself when you&amp;#39;re actually going to merge it onto a predecessor branch (they finally fixed that one after denying it was a problem) to the perennial &amp;quot;hey, the csproj file changed so you need to commit it; wait, not, it&amp;#39;s not changed&amp;quot; the fun is never ending. Right now I&amp;#39;m trying to figure out just what the stupid service did to my code base and figure out how to get back to doing what I want to do, which is code safely and not have to fight with source control software.&lt;/p&gt; &lt;p&gt;Anyway, my real interest here is to see if anyone has recommendations on a 3rd party git tool, either external or add-in, which is, unlike the Microsoft junk, rock solid and well-documented. &lt;/p&gt; &lt;p&gt;Thoughts?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/MotorcycleMayor"&gt; /u/MotorcycleMayor &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oj88xy/better_tool_for_use_with_visual_studio_2019/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oj88xy/better_tool_for_use_with_visual_studio_2019/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oj88xy</id>
    <link href="https://www.reddit.com/r/git/comments/oj88xy/better_tool_for_use_with_visual_studio_2019/"></link>
    <updated>2021-07-13T04:32:58+00:00</updated>
    <published>2021-07-13T04:32:58+00:00</published>
    <title>Better Tool for Use With Visual Studio 2019?</title>
  </entry>
  <entry>
    <author>
      <name>/u/NYbeast</name>
      <uri>https://www.reddit.com/user/NYbeast</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello, so for a project I am trying to use git hooks to restrict it so that you can only merge our &amp;#39;development&amp;#39; branch into &amp;#39;main&amp;#39;.&lt;/p&gt; &lt;p&gt;I&amp;#39;ve gathered that I must use the &lt;code&gt;pre-merge-commit&lt;/code&gt; hook, and ran into an issue where I couldn&amp;#39;t figure out how to get the merging branch. &lt;a href="https://stackoverflow.com/questions/67090845/allow-merging-branches-only-with-a-specific-name"&gt;This thread&lt;/a&gt; suggested to use the following line in the script: &lt;code&gt;git for-each-ref --points-at MERGE_HEAD&lt;/code&gt;&lt;/p&gt; &lt;p&gt;However, when this line runs in the script, it returns &amp;quot;error: malformed object name &amp;#39;MERGE_HEAD.&amp;#39;&amp;quot; I assume that this is because at the time the script is ran, the merging is complete. I am trying to find a work-around so that I can get the branch name and otherwise easily implement this functionality. Any help would be greatly appreciated, thanks!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/NYbeast"&gt; /u/NYbeast &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oj4t8o/only_merge_to_main_from_certain_branches/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oj4t8o/only_merge_to_main_from_certain_branches/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oj4t8o</id>
    <link href="https://www.reddit.com/r/git/comments/oj4t8o/only_merge_to_main_from_certain_branches/"></link>
    <updated>2021-07-13T01:01:05+00:00</updated>
    <published>2021-07-13T01:01:05+00:00</published>
    <title>Only merge to main from certain branches</title>
  </entry>
  <entry>
    <author>
      <name>/u/No-Raccoon2356</name>
      <uri>https://www.reddit.com/user/No-Raccoon2356</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I want to move the highest level directory that contains the .git folder. Can I safely move this entire folder anywhere without any considerations, or are there some steps that must be taken first?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/No-Raccoon2356"&gt; /u/No-Raccoon2356 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omabyl/moving_the_directory_containing_git/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omabyl/moving_the_directory_containing_git/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_omabyl</id>
    <link href="https://www.reddit.com/r/git/comments/omabyl/moving_the_directory_containing_git/"></link>
    <updated>2021-07-17T18:56:11+00:00</updated>
    <published>2021-07-17T18:56:11+00:00</published>
    <title>Moving the directory containing .git</title>
  </entry>
  <entry>
    <author>
      <name>/u/OsamaNA_dev</name>
      <uri>https://www.reddit.com/user/OsamaNA_dev</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/OsamaNA_dev"&gt; /u/OsamaNA_dev &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="/r/github/comments/ogdzys/stuck_on_pushing_to_github_repo_for_6_hours/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oge20l/stuck_on_pushing_to_github_repo_for_6_hours/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oge20l</id>
    <link href="https://www.reddit.com/r/git/comments/oge20l/stuck_on_pushing_to_github_repo_for_6_hours/"></link>
    <updated>2021-07-08T19:06:29+00:00</updated>
    <published>2021-07-08T19:06:29+00:00</published>
    <title>STUCK ON PUSHING TO GITHUB REPO FOR 6 HOURS PLEASE HELP</title>
  </entry>
  <entry>
    <author>
      <name>/u/PitapatCat</name>
      <uri>https://www.reddit.com/user/PitapatCat</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I accidentally deleted all my code, and I think it&amp;#39;s because I made some mistake from git checkout. After some Googling, I arrived at the following discussion thread, but I still do not understand how &amp;quot;check[ing] out a bare repo instead of adding his files to stage&amp;quot; can delete files: &lt;a href="https://news.ycombinator.com/item?id=15044264"&gt;https://news.ycombinator.com/item?id=15044264&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/PitapatCat"&gt; /u/PitapatCat &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ohebe4/how_does_git_checkout_delete_files/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ohebe4/how_does_git_checkout_delete_files/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ohebe4</id>
    <link href="https://www.reddit.com/r/git/comments/ohebe4/how_does_git_checkout_delete_files/"></link>
    <updated>2021-07-10T07:34:45+00:00</updated>
    <published>2021-07-10T07:34:45+00:00</published>
    <title>How does git checkout delete files?</title>
  </entry>
  <entry>
    <author>
      <name>/u/Professional-Deal406</name>
      <uri>https://www.reddit.com/user/Professional-Deal406</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;[deleted]&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Professional-Deal406"&gt; /u/Professional-Deal406 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/om20ch/change_older_commit_message_without_rebase/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/om20ch/change_older_commit_message_without_rebase/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_om20ch</id>
    <link href="https://www.reddit.com/r/git/comments/om20ch/change_older_commit_message_without_rebase/"></link>
    <updated>2021-07-17T10:52:17+00:00</updated>
    <published>2021-07-17T10:52:17+00:00</published>
    <title>Change older commit message without rebase ?</title>
  </entry>
  <entry>
    <author>
      <name>/u/Programeasily</name>
      <uri>https://www.reddit.com/user/Programeasily</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Tracking the source code during the development is a tiresome job. Git is a software which helps us in this area. It is a free open source Version Control System. It helps developers to coordinate the source management and saves a lot of time for maintaining it. Git not only helps to keep track of changes made to file, in addition we can revert to previous versions when needed and much more. &lt;a href="https://programeasily.com/2021/07/16/basic-git-commands-part-1/"&gt;Read More&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Programeasily"&gt; /u/Programeasily &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ollytx/basic_git_commands_must_know_part_1/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ollytx/basic_git_commands_must_know_part_1/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ollytx</id>
    <link href="https://www.reddit.com/r/git/comments/ollytx/basic_git_commands_must_know_part_1/"></link>
    <updated>2021-07-16T17:45:29+00:00</updated>
    <published>2021-07-16T17:45:29+00:00</published>
    <title>Basic Git Commands – Must Know –Part 1</title>
  </entry>
  <entry>
    <author>
      <name>/u/RPBiohazard</name>
      <uri>https://www.reddit.com/user/RPBiohazard</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi there, I have a git repo containing a large image dataset on its main. I have a remote branch that does not have this large dataset. I would like to clone this branch specifically onto my raspberry pi, so I don&amp;#39;t have to download the entire dataset and then check out the branch I want. I have run git clone --single-branch --branch &amp;lt;branch&amp;gt; &amp;lt;url&amp;gt; but this clones main &lt;em&gt;first&lt;/em&gt; and then checks out the branch. This is a huge download that I don&amp;#39;t want on my tiny raspberry pi.&lt;/p&gt; &lt;p&gt;Is there a way to only clone the small branch without cloning main first?&lt;/p&gt; &lt;p&gt;I would rather not make a new repo since this is part of a team project. Thanks for your help!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/RPBiohazard"&gt; /u/RPBiohazard &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/olqufv/cloning_only_a_branch/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/olqufv/cloning_only_a_branch/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_olqufv</id>
    <link href="https://www.reddit.com/r/git/comments/olqufv/cloning_only_a_branch/"></link>
    <updated>2021-07-16T21:48:27+00:00</updated>
    <published>2021-07-16T21:48:27+00:00</published>
    <title>Cloning ONLY a branch</title>
  </entry>
  <entry>
    <author>
      <name>/u/Reverend-Machiavelli</name>
      <uri>https://www.reddit.com/user/Reverend-Machiavelli</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi everyone, &lt;/p&gt; &lt;p&gt;Scratching my head here. After changes are made in localbranch1, I switch to a local main branch, and I find that the changes are in the main branch too. I don&amp;#39;t why this happens, both using bash checkout and the VS Code button in the bottom-right corner. &lt;/p&gt; &lt;p&gt;I hope this isn&amp;#39;t a noob question. I appreciate any insight into why the changes aren&amp;#39;t limited to the branch I made them in. Maybe I setup VS code wrong?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Reverend-Machiavelli"&gt; /u/Reverend-Machiavelli &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/on9gzm/vs_code_makes_changes_to_both_branches/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/on9gzm/vs_code_makes_changes_to_both_branches/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_on9gzm</id>
    <link href="https://www.reddit.com/r/git/comments/on9gzm/vs_code_makes_changes_to_both_branches/"></link>
    <updated>2021-07-19T07:52:55+00:00</updated>
    <published>2021-07-19T07:52:55+00:00</published>
    <title>VS Code makes changes to both branches</title>
  </entry>
  <entry>
    <author>
      <name>/u/Schroefdop</name>
      <uri>https://www.reddit.com/user/Schroefdop</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Schroefdop"&gt; /u/Schroefdop &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="/r/zsh/comments/ojblwf/ohmyzsh_git_branching_plugin/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ojbnwz/ohmyzsh_git_branching_plugin/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ojbnwz</id>
    <link href="https://www.reddit.com/r/git/comments/ojbnwz/ohmyzsh_git_branching_plugin/"></link>
    <updated>2021-07-13T08:58:09+00:00</updated>
    <published>2021-07-13T08:58:09+00:00</published>
    <title>Oh-my-zsh git branching plugin</title>
  </entry>
  <entry>
    <author>
      <name>/u/TechBasedQuestion</name>
      <uri>https://www.reddit.com/user/TechBasedQuestion</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I was wondering what code repo (github, bitbucket, gitlab, etc.) would be best to use for individuals in 2021. I&amp;#39;ve seen a lot of posts on this subject, but they almost all seem super outdated (many saying stuff like github not allowing private repos). I personally use github right now mainly because using the github desktop tool is super simple and nice and I never really learned how to properly use git, but I haven&amp;#39;t really been thinking of the other options available or how they work until today since I noticed that all the activity in my private repositories was being cast out on github weather I liked it or not. What are the upsides and downsides of whats available, and what would you recommend for individuals who still aren&amp;#39;t doing anything tech-heavy? &lt;/p&gt; &lt;p&gt;TLDR: What would the best code repo be for an individual making very basic programs that just wants a place to host personal projects with version control in case anything goes wrong?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/TechBasedQuestion"&gt; /u/TechBasedQuestion &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oia371/best_code_repo_in_2021/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oia371/best_code_repo_in_2021/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oia371</id>
    <link href="https://www.reddit.com/r/git/comments/oia371/best_code_repo_in_2021/"></link>
    <updated>2021-07-11T18:43:05+00:00</updated>
    <published>2021-07-11T18:43:05+00:00</published>
    <title>Best Code Repo in 2021?</title>
  </entry>
  <entry>
    <author>
      <name>/u/Wallik2</name>
      <uri>https://www.reddit.com/user/Wallik2</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Here&amp;#39;s my progress and the problem can be seen at the end of the video : &lt;a href="https://www.youtube.com/watch?v=FrgkjlYkshw"&gt;https://www.youtube.com/watch?v=FrgkjlYkshw&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/Wallik2"&gt; /u/Wallik2 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odmj6m/git_problem_cannot_do_git_push/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odmj6m/git_problem_cannot_do_git_push/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_odmj6m</id>
    <link href="https://www.reddit.com/r/git/comments/odmj6m/git_problem_cannot_do_git_push/"></link>
    <updated>2021-07-04T15:20:23+00:00</updated>
    <published>2021-07-04T15:20:23+00:00</published>
    <title>Git Problem: Cannot do git push</title>
  </entry>
  <entry>
    <author>
      <name>/u/WindingLostWay</name>
      <uri>https://www.reddit.com/user/WindingLostWay</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Ideally I just want to be able to do:&lt;/p&gt; &lt;p&gt;git checkout -b newthing&lt;/p&gt; &lt;p&gt;[ do some work ]&lt;/p&gt; &lt;p&gt;git add -A&lt;/p&gt; &lt;p&gt;git commit -m &amp;#39;Work&amp;#39;&lt;/p&gt; &lt;p&gt;git push&lt;/p&gt; &lt;p&gt;I&amp;#39;m guessing what I&amp;#39;m asking is can I make it do:&lt;/p&gt; &lt;p&gt;git push -u origin newthing &lt;/p&gt; &lt;p&gt;...automatically as part of the initial git checkout -b newthing...?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/WindingLostWay"&gt; /u/WindingLostWay &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/onbknd/can_i_setup_my_local_git_repo_so_that_all_newly/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/onbknd/can_i_setup_my_local_git_repo_so_that_all_newly/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_onbknd</id>
    <link href="https://www.reddit.com/r/git/comments/onbknd/can_i_setup_my_local_git_repo_so_that_all_newly/"></link>
    <updated>2021-07-19T10:45:06+00:00</updated>
    <published>2021-07-19T10:45:06+00:00</published>
    <title>Can I setup my local git repo so that all newly created branches are automatically set to get pushed up to to the remote master thingamy when I do a git push?</title>
  </entry>
  <entry>
    <author>
      <name>/u/__GROUP_BY__</name>
      <uri>https://www.reddit.com/user/__GROUP_BY__</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/__GROUP_BY__"&gt; /u/__GROUP_BY__ &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oijtvo/do_you_ever_use_git_stash_without_the_u_flag_when/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oijtvo/do_you_ever_use_git_stash_without_the_u_flag_when/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oijtvo</id>
    <link href="https://www.reddit.com/r/git/comments/oijtvo/do_you_ever_use_git_stash_without_the_u_flag_when/"></link>
    <updated>2021-07-12T04:17:04+00:00</updated>
    <published>2021-07-12T04:17:04+00:00</published>
    <title>Do you ever use git stash without the -u flag? When would it make sense not to use -u?</title>
  </entry>
  <entry>
    <author>
      <name>/u/__GROUP_BY__</name>
      <uri>https://www.reddit.com/user/__GROUP_BY__</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;It is very common to get lost while reviewing large pull requests. For example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The list of files that are presented to the reviewer do not have a meaningful order. &lt;/li&gt; &lt;li&gt;At times, dozens of files may only have side-effect-free formatting changes (e.g. blank lines). &lt;/li&gt; &lt;li&gt;In general as diffs are not syntax-aware, reviewers see line/token level changes highlited instead of higher level semantic changes. &lt;/li&gt; &lt;li&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Is there a code review tool that can be integrated with github that allows the author of a PR to order and group changes?&lt;/p&gt; &lt;p&gt;For example, instead of a PR that looks like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;+-----------------------------------------------------------------------------+ | settings.gradle | | src/main/java/com/Bye.java | | src/main/java/com/foo/bar/X.java | | build.gradle | | src/main/java/com/Hello.java | | src/main/java/com/HelloTest.java | | src/test/java/com/ByeTest.java | +-----------------------------------------------------------------------------+ &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;I want to be able to group the files before creating the PR, maybe with a title per group:&lt;/p&gt; &lt;h3&gt;Added i18n dependencies&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;+-----------------------------------------------------------------------------+ | settings.gradle | | build.gradle | +-----------------------------------------------------------------------------+ &lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Made Hello i18n-aware:&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;+-----------------------------------------------------------------------------+ | src/main/java/com/Hello.java | | src/main/java/com/HelloTest.java | +-----------------------------------------------------------------------------+ &lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Made Bye i18n-aware:&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;+-----------------------------------------------------------------------------+ | src/main/java/com/Bye.java | | src/test/java/com/ByeTest.java | +-----------------------------------------------------------------------------+ &lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Removed unused imports&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;+-----------------------------------------------------------------------------+ | src/main/java/com/foo/bar/X.java | +-----------------------------------------------------------------------------+ &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/__GROUP_BY__"&gt; /u/__GROUP_BY__ &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/olz3s5/looking_for_a_tool_to_improve_pull_request/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/olz3s5/looking_for_a_tool_to_improve_pull_request/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_olz3s5</id>
    <link href="https://www.reddit.com/r/git/comments/olz3s5/looking_for_a_tool_to_improve_pull_request/"></link>
    <updated>2021-07-17T06:39:41+00:00</updated>
    <published>2021-07-17T06:39:41+00:00</published>
    <title>Looking for a tool to improve pull request experience</title>
  </entry>
  <entry>
    <author>
      <name>/u/__pythonic_user__</name>
      <uri>https://www.reddit.com/user/__pythonic_user__</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Let&amp;#39;s say I have a mini project whose git history looks like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ git lol * b53390c (HEAD -&amp;gt; main) mini-project 3 * d4ba0ec mini-project 2 * 63d4aff mini-project 1 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;...and a root project repo whose history looks like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ git lol * 70925ba (HEAD -&amp;gt; main) root 2 * 538af79 root 1 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;I want to add the mini-project as a subfolder in the root repo. I can add the updated contents manually and then perform a single commit in the root repo. &lt;em&gt;However, I want to preserve the commits of the mini-project (&lt;code&gt;b53390c&lt;/code&gt;, &lt;code&gt;d4ba0ec&lt;/code&gt;, &lt;code&gt;63d4aff&lt;/code&gt;).&lt;/em&gt;&lt;/p&gt; &lt;p&gt;I found a way to do this using &lt;code&gt;git subtree&lt;/code&gt;; it felt like the perfect tool for this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ git subtree add -P mini-project ../mini-project/.git main git fetch ../mini-project/.git main remote: Enumerating objects: 9, done. remote: Counting objects: 100% (9/9), done. remote: Compressing objects: 100% (4/4), done. remote: Total 9 (delta 0), reused 0 (delta 0), pack-reused 0 Unpacking objects: 100% (9/9), 713 bytes | 1024 bytes/s, done. From ../mini-project/ * branch main -&amp;gt; FETCH_HEAD Added dir &amp;#39;mini-project&amp;#39; $ git lol * 16160c3 (HEAD -&amp;gt; main) Add &amp;#39;mini-project/&amp;#39; from commit &amp;#39;b53390c1057cb58ba34a6775b5c0c1334bba2cb4&amp;#39; |\ | * b53390c mini-project 3 | * d4ba0ec mini-project 2 | * 63d4aff mini-project 1 * 70925ba root 2 * 538af79 root 1 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;However, here&amp;#39;s my question. &lt;strong&gt;Once there are more commits in the mini project, how do I merge the updates (see &lt;code&gt;ea486b4&lt;/code&gt;, &lt;code&gt;8f78c20&lt;/code&gt; below) into the &lt;code&gt;mini-project&lt;/code&gt; sub-directory of the root repo?&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ git lol * ea486b4 (HEAD -&amp;gt; main) mini-project 5 * 8f78c20 mini-project 4 * b53390c mini-project 3 * d4ba0ec mini-project 2 * 63d4aff mini-project 1 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;I don&amp;#39;t think &lt;code&gt;git subtree merge&lt;/code&gt; command is going to help me here.&lt;/p&gt; &lt;p&gt;If &lt;code&gt;git subtree&lt;/code&gt; is not ideal here, can I use some other (more elegant) approach?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/__pythonic_user__"&gt; /u/__pythonic_user__ &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/onebcp/how_to_merge_updates_last_few_commits_from_a/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/onebcp/how_to_merge_updates_last_few_commits_from_a/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_onebcp</id>
    <link href="https://www.reddit.com/r/git/comments/onebcp/how_to_merge_updates_last_few_commits_from_a/"></link>
    <updated>2021-07-19T13:43:27+00:00</updated>
    <published>2021-07-19T13:43:27+00:00</published>
    <title>How to merge updates (last few commits) from a source (local) repository with sub directory created using git subtree?</title>
  </entry>
  <entry>
    <author>
      <name>/u/aristoshi</name>
      <uri>https://www.reddit.com/user/aristoshi</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I noticed that commit should not have been committed, so I want to delete it from the Pull Request which has been sent in GitHub. It&amp;#39;s the last commit out of 4 commits.&lt;/p&gt; &lt;p&gt;I&amp;#39;d really appreciate step by step directions, please keep in mind I&amp;#39;ve already made a PR and the platform is GitHub.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/aristoshi"&gt; /u/aristoshi &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oh6bvy/i_made_a_pull_request_on_github_however_i_want_to/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oh6bvy/i_made_a_pull_request_on_github_however_i_want_to/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oh6bvy</id>
    <link href="https://www.reddit.com/r/git/comments/oh6bvy/i_made_a_pull_request_on_github_however_i_want_to/"></link>
    <updated>2021-07-09T22:33:08+00:00</updated>
    <published>2021-07-09T22:33:08+00:00</published>
    <title>I made a pull request on GitHub, however I want to remove one of the commits (its the 4th out of 4 commits), how do I do that?</title>
  </entry>
  <entry>
    <author>
      <name>/u/ashkanahmadi</name>
      <uri>https://www.reddit.com/user/ashkanahmadi</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/ashkanahmadi"&gt; /u/ashkanahmadi &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oj2sf3/whats_the_best_way_of_using_branches_when_i_work/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oj2sf3/whats_the_best_way_of_using_branches_when_i_work/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oj2sf3</id>
    <link href="https://www.reddit.com/r/git/comments/oj2sf3/whats_the_best_way_of_using_branches_when_i_work/"></link>
    <updated>2021-07-12T23:04:43+00:00</updated>
    <published>2021-07-12T23:04:43+00:00</published>
    <title>What's the best way of using branches? When I work on a new feature, I make a new branch. When the work is done, I merge that branch into the main branch and then upload the main branch to GitHub. What should I do with all the branches I have? Should I delete them or keep them hanging?</title>
  </entry>
  <entry>
    <author>
      <name>/u/beleeee_dat</name>
      <uri>https://www.reddit.com/user/beleeee_dat</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/beleeee_dat"&gt; /u/beleeee_dat &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://github.com/esrlabs/josh"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/okvkib/josh_get_the_advantages_of_a_monorepo_with/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_okvkib</id>
    <link href="https://www.reddit.com/r/git/comments/okvkib/josh_get_the_advantages_of_a_monorepo_with/"></link>
    <updated>2021-07-15T15:49:01+00:00</updated>
    <published>2021-07-15T15:49:01+00:00</published>
    <title>Josh: Get the advantages of a monorepo with multirepo setups</title>
  </entry>
  <entry>
    <author>
      <name>/u/berrmal64</name>
      <uri>https://www.reddit.com/user/berrmal64</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;At this point upstream/main has all the files I have, but with updates and additions and extra files. I want to fetch/merge upstream/main into my origin/main, but when I get on github and click &amp;quot;Fetch Upstream&amp;quot; it says it can&amp;#39;t make a pull request, as the commit histories are entirely different.&lt;/p&gt; &lt;p&gt;What should I do?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/berrmal64"&gt; /u/berrmal64 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/okdiwb/i_forked_a_repo_and_have_written_code_on_a_branch/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/okdiwb/i_forked_a_repo_and_have_written_code_on_a_branch/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_okdiwb</id>
    <link href="https://www.reddit.com/r/git/comments/okdiwb/i_forked_a_repo_and_have_written_code_on_a_branch/"></link>
    <updated>2021-07-14T20:58:22+00:00</updated>
    <published>2021-07-14T20:58:22+00:00</published>
    <title>I forked a repo and have written code on a branch. In the meantime, the upstream repo owner replaced their entire repo with one that has an entirely different commit history. How to fix?</title>
  </entry>
  <entry>
    <author>
      <name>/u/berrmal64</name>
      <uri>https://www.reddit.com/user/berrmal64</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;At this point upstream/main has all the files I have, but with updates and additions and extra files. I want to fetch/merge upstream/main into my origin/main, but when I get on github and click &amp;quot;Fetch Upstream&amp;quot; it says it can&amp;#39;t make a pull request, as the commit histories are entirely different.&lt;/p&gt; &lt;p&gt;What should I do?&lt;/p&gt; &lt;p&gt;EDIT: thanks for the help everybody, I did eventually get everything in sync by fetching upstream, rebasing my code into that, and then pushing into origin. There were a handful of -f flags involved, and I don&amp;#39;t want to do it that way again, but for now, the problem is solved and enough of the history is preserved to be useful.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/berrmal64"&gt; /u/berrmal64 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/okdiwb/i_forked_a_repo_and_have_written_code_on_a_branch/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/okdiwb/i_forked_a_repo_and_have_written_code_on_a_branch/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_okdiwb</id>
    <link href="https://www.reddit.com/r/git/comments/okdiwb/i_forked_a_repo_and_have_written_code_on_a_branch/"></link>
    <updated>2021-07-14T20:58:22+00:00</updated>
    <published>2021-07-14T20:58:22+00:00</published>
    <title>I forked a repo and have written code on a branch. In the meantime, the upstream repo owner replaced their entire repo with one that has an entirely different commit history. How to fix?</title>
  </entry>
  <entry>
    <author>
      <name>/u/breck</name>
      <uri>https://www.reddit.com/user/breck</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/breck"&gt; /u/breck &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://github.com/not-an-aardvark/every-git-commit-shorthash"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oh4b3d/a_git_repository_with_228_commitsone_for_every/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oh4b3d</id>
    <link href="https://www.reddit.com/r/git/comments/oh4b3d/a_git_repository_with_228_commitsone_for_every/"></link>
    <updated>2021-07-09T20:46:15+00:00</updated>
    <published>2021-07-09T20:46:15+00:00</published>
    <title>A Git repository with 2^28 commits—one for every 7-character shorthash</title>
  </entry>
  <entry>
    <author>
      <name>/u/cag8f</name>
      <uri>https://www.reddit.com/user/cag8f</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi all. When I finish coding a task, I push the finished code to my remote repo. But sometimes, at the end of a day, I have unpushed edits--they are either in my local working directory, or my local stash. To guard against loss of data, what options do I have in terms of backing up these edits? &lt;/p&gt; &lt;p&gt;I guess creating a new branch with my edits, and pushing it to the remote repo, is an option. But what about local stashes--how do I back those up? Do I have to simply make a copy of the entire local repo and store it on another storage device?&lt;/p&gt; &lt;p&gt;Thanks in advance.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/cag8f"&gt; /u/cag8f &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ok2w0j/how_to_backup_edits_in_local_repo/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ok2w0j/how_to_backup_edits_in_local_repo/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ok2w0j</id>
    <link href="https://www.reddit.com/r/git/comments/ok2w0j/how_to_backup_edits_in_local_repo/"></link>
    <updated>2021-07-14T12:01:19+00:00</updated>
    <published>2021-07-14T12:01:19+00:00</published>
    <title>How to backup edits in local repo?</title>
  </entry>
  <entry>
    <author>
      <name>/u/ccharles</name>
      <uri>https://www.reddit.com/user/ccharles</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Posts complaining about the new &lt;code&gt;main&lt;/code&gt; naming that GitHub and others are adopting as their new default will be removed. No exceptions.&lt;/p&gt; &lt;p&gt;&lt;del&gt;This change hurts nobody and it removes problematic language. Getting upset about it is pointless.&lt;/del&gt;&lt;/p&gt; &lt;p&gt;As some have pointed out below, the justification that I initially gave for this move wasn&amp;#39;t great. But there was a &lt;em&gt;lot&lt;/em&gt; of noise about this change, and very little signal.&lt;/p&gt; &lt;p&gt;Thanks to those of you who made better arguments for this than I did.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/ccharles"&gt; /u/ccharles &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/jtrx1k/announcement_posts_complaining_about_renaming/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/jtrx1k/announcement_posts_complaining_about_renaming/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_jtrx1k</id>
    <link href="https://www.reddit.com/r/git/comments/jtrx1k/announcement_posts_complaining_about_renaming/"></link>
    <updated>2020-11-14T00:15:24+00:00</updated>
    <published>2020-11-14T00:15:24+00:00</published>
    <title>Announcement: Posts complaining about renaming master to main will be removed</title>
  </entry>
  <entry>
    <author>
      <name>/u/choff5507</name>
      <uri>https://www.reddit.com/user/choff5507</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;So, I am relatively new to Git and I am wondering the following if someone could tell me:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Looking here:&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;a href="https://github.com/github/gitignore/tree/master/Global"&gt;https://github.com/github/gitignore/tree/master/Global&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There appears to be gitignore files for various IDEs as well as a global Windows one. Is it ok to combine say the Jetbrains one with the Windows one with the VsCode one without issues?&lt;/p&gt; &lt;ol&gt; &lt;li&gt;If using Conda is there anything special I need to do? Is it good practice to same the requirements XML as well so the repository can be easily recreated by someone cloning it?&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;Thanks!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/choff5507"&gt; /u/choff5507 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogyji7/a_couple_basic_questions_about_git/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogyji7/a_couple_basic_questions_about_git/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ogyji7</id>
    <link href="https://www.reddit.com/r/git/comments/ogyji7/a_couple_basic_questions_about_git/"></link>
    <updated>2021-07-09T15:58:09+00:00</updated>
    <published>2021-07-09T15:58:09+00:00</published>
    <title>A couple basic questions about Git</title>
  </entry>
  <entry>
    <author>
      <name>/u/cookke</name>
      <uri>https://www.reddit.com/user/cookke</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;So I am fully integrating GIT into my house...100%, or trying to at least....&lt;/p&gt; &lt;p&gt;I can&amp;#39;t get the showers hooked up, anyone have any experience with this?&lt;/p&gt; &lt;p&gt;The walls are ok, just a bit glichy....&lt;/p&gt; &lt;p&gt;My main concern is the KITCHEN! I mean all that gas, I&amp;#39;m not really sure if GIT is up for the challenge...&lt;/p&gt; &lt;p&gt;Should I abandon all hope?&lt;/p&gt; &lt;p&gt;I am not sure if I can do this...&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/cookke"&gt; /u/cookke &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/olkjup/trying_to_build_a_new_system_and_im_running_into/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/olkjup/trying_to_build_a_new_system_and_im_running_into/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_olkjup</id>
    <link href="https://www.reddit.com/r/git/comments/olkjup/trying_to_build_a_new_system_and_im_running_into/"></link>
    <updated>2021-07-16T16:37:23+00:00</updated>
    <published>2021-07-16T16:37:23+00:00</published>
    <title>Trying to build a new system and I'm running into a few problems...</title>
  </entry>
  <entry>
    <author>
      <name>/u/deburin</name>
      <uri>https://www.reddit.com/user/deburin</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Couple questions about git pull:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;During git fetch, are all refs including to remote branches not shown on local, downloaded?&lt;/li&gt; &lt;li&gt;During pull, is only the checked out branch merged? I believe that has been my experience&lt;/li&gt; &lt;/ol&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/deburin"&gt; /u/deburin &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/okdo02/pull_fetch_all_refs_merge_checked_out_remote/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/okdo02/pull_fetch_all_refs_merge_checked_out_remote/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_okdo02</id>
    <link href="https://www.reddit.com/r/git/comments/okdo02/pull_fetch_all_refs_merge_checked_out_remote/"></link>
    <updated>2021-07-14T21:05:06+00:00</updated>
    <published>2021-07-14T21:05:06+00:00</published>
    <title>Pull: fetch all refs, merge checked out remote?</title>
  </entry>
  <entry>
    <author>
      <name>/u/deburin</name>
      <uri>https://www.reddit.com/user/deburin</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Is there any way to bundle multiple (or all) branches at once instead of having to specify a branch in a bundle file? Then when git pulling from that branch the desired behavior would be to disperse commits among branches of the same name in the bundle file (which substitutes for a &amp;quot;remote&amp;quot;).&lt;/p&gt; &lt;p&gt;*Of course .gitignored files/folders are still ignored.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/deburin"&gt; /u/deburin &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oj0git/git_bundling_multiple_branches/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oj0git/git_bundling_multiple_branches/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oj0git</id>
    <link href="https://www.reddit.com/r/git/comments/oj0git/git_bundling_multiple_branches/"></link>
    <updated>2021-07-12T21:06:45+00:00</updated>
    <published>2021-07-12T21:06:45+00:00</published>
    <title>Git bundling multiple branches?</title>
  </entry>
  <entry>
    <author>
      <name>/u/deburin</name>
      <uri>https://www.reddit.com/user/deburin</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Let&amp;#39;s say in addition to my &lt;code&gt;origin&lt;/code&gt; remote I add another remote &lt;code&gt;r2&lt;/code&gt;. Remote &lt;code&gt;r2&lt;/code&gt; has a branch &lt;code&gt;r2feature&lt;/code&gt;. How does my local git discover this branch so that i may check it out? &lt;/p&gt; &lt;p&gt;Me and a colleague are trying to think through it and my guess is pulling the &lt;code&gt;master&lt;/code&gt; branch on either remote, will inform the local git of the new branches each remote has.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/deburin"&gt; /u/deburin &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ojmlzr/2_remotes_switching_branches/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ojmlzr/2_remotes_switching_branches/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ojmlzr</id>
    <link href="https://www.reddit.com/r/git/comments/ojmlzr/2_remotes_switching_branches/"></link>
    <updated>2021-07-13T19:11:40+00:00</updated>
    <published>2021-07-13T19:11:40+00:00</published>
    <title>2 remotes, switching branches</title>
  </entry>
  <entry>
    <author>
      <name>/u/devopsdocker</name>
      <uri>https://www.reddit.com/user/devopsdocker</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am a small YouTuber and have a YouTube channel called &lt;a href="https://www.youtube.com/channel/UCoOq-DtESvayx5yJE5H6-qQ/videos"&gt;Thetips4you&lt;/a&gt; where I publish tutorial on DevOps, Docker, Kubernetes, Ansible, Git, ELK, Grafana and Prometheus weekly. My goal is to share the knowledge on the new technologies with others. Have you ever searched for a easy to understand DevOps, Docker, Kubernetes, Ansible guide? Here it is 30+ hrs Video tutorial series completely free.&lt;/p&gt; &lt;p&gt;I started recording videos with automated voice as I was not confident and later in the journey started recording with my own voice. I try to be clear and straight forward with practical scenarios , with out un-necessary talks and respecting your time. The content is mostly aimed at beginners and intermediate IT infra administrators and developers, I hope it can help some of you to learn something new.&lt;/p&gt; &lt;p&gt;I had put a lot of effort in creating this video series for beginners. It consist of basics on CICD, Containers, Kubernetes Pods, Deployments, Services, Setting up Jenkins, Docker, Podman, Minikube, Ansible, ELK, Git, most used commands, Pipeline jobs with Sonarqube quality checks, Artifactory for binary management, ansible playbooks, real use cases, deploying docker containers using ansible, how to convert your playbook in to roles, Monitoring docker containers, windows and linux servers, and more &amp;amp; more! .&lt;/p&gt; &lt;p&gt;As I&amp;#39;m not a professional youtuber, I&amp;#39;d love to hear your feedback and support&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/wmth6fylrs971.png?width=1065&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2f5357e4f3d0e6667a567dae445308885ed3f50b"&gt;https://preview.redd.it/wmth6fylrs971.png?width=1065&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=2f5357e4f3d0e6667a567dae445308885ed3f50b&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/devopsdocker"&gt; /u/devopsdocker &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ofjhxa/spend_15_minutes_a_day_to_improve_your_git_docker/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ofjhxa/spend_15_minutes_a_day_to_improve_your_git_docker/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ofjhxa</id>
    <link href="https://www.reddit.com/r/git/comments/ofjhxa/spend_15_minutes_a_day_to_improve_your_git_docker/"></link>
    <updated>2021-07-07T14:02:18+00:00</updated>
    <published>2021-07-07T14:02:18+00:00</published>
    <title>Spend 15 minutes a day to improve your Git, Docker, DevOps, Kubernetes, Ansible Skills</title>
  </entry>
  <entry>
    <author>
      <name>/u/doa-doa</name>
      <uri>https://www.reddit.com/user/doa-doa</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;So here I want to use the command push to upload the code to Bitbucket&lt;/p&gt; &lt;p&gt;&lt;a href="https://imgur.com/a/aGXErID"&gt;https://imgur.com/a/aGXErID&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It looked like it worked but I&amp;#39;m not seeing any changes in my Bitbucket, any help?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/doa-doa"&gt; /u/doa-doa &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omdfng/cant_see_any_changes_on_commit_in_bitbucket/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omdfng/cant_see_any_changes_on_commit_in_bitbucket/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_omdfng</id>
    <link href="https://www.reddit.com/r/git/comments/omdfng/cant_see_any_changes_on_commit_in_bitbucket/"></link>
    <updated>2021-07-17T21:43:06+00:00</updated>
    <published>2021-07-17T21:43:06+00:00</published>
    <title>Cant see any changes on commit in Bitbucket</title>
  </entry>
  <entry>
    <author>
      <name>/u/felipec</name>
      <uri>https://www.reddit.com/user/felipec</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/felipec"&gt; /u/felipec &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://felipec.wordpress.com/2021/07/05/git-update/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oe7xqn/git_update_the_odyssey_for_a_sensible_git_pull/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oe7xqn</id>
    <link href="https://www.reddit.com/r/git/comments/oe7xqn/git_update_the_odyssey_for_a_sensible_git_pull/"></link>
    <updated>2021-07-05T13:58:40+00:00</updated>
    <published>2021-07-05T13:58:40+00:00</published>
    <title>git update: the odyssey for a sensible git pull</title>
  </entry>
  <entry>
    <author>
      <name>/u/felipec</name>
      <uri>https://www.reddit.com/user/felipec</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/felipec"&gt; /u/felipec &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://felipec.wordpress.com/2021/07/13/why-is-git-pull-broken/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ojpk1o/why_is_git_pull_broken/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ojpk1o</id>
    <link href="https://www.reddit.com/r/git/comments/ojpk1o/why_is_git_pull_broken/"></link>
    <updated>2021-07-13T21:34:04+00:00</updated>
    <published>2021-07-13T21:34:04+00:00</published>
    <title>Why is git pull broken?</title>
  </entry>
  <entry>
    <author>
      <name>/u/felipec</name>
      <uri>https://www.reddit.com/user/felipec</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/felipec"&gt; /u/felipec &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://felipec.wordpress.com/2021/07/19/proper-git-commit/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/on7fi6/how_a_proper_git_commit_is_made_by_a_git_developer/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_on7fi6</id>
    <link href="https://www.reddit.com/r/git/comments/on7fi6/how_a_proper_git_commit_is_made_by_a_git_developer/"></link>
    <updated>2021-07-19T05:12:42+00:00</updated>
    <published>2021-07-19T05:12:42+00:00</published>
    <title>How a proper git commit is made (by a git developer)</title>
  </entry>
  <entry>
    <author>
      <name>/u/felipec</name>
      <uri>https://www.reddit.com/user/felipec</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I explained my proposal to fix &lt;code&gt;git pull&lt;/code&gt; in my blog post &lt;a href="https://felipec.wordpress.com/2021/07/05/git-update/"&gt;git update: the odyssey for a sensible git pull&lt;/a&gt;, which in addition to &lt;code&gt;git update&lt;/code&gt; has fixes for &lt;code&gt;git pull&lt;/code&gt;. The proposal is to cleanly separate the three modes:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;code&gt;git pull&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;git pull --merge&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;git pull --rebase&lt;/code&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;To specify which mode you want by default, you configure &lt;code&gt;pull.mode&lt;/code&gt;, and the three values are obvious: &lt;code&gt;fast-forward&lt;/code&gt;, &lt;code&gt;merge&lt;/code&gt;, and &lt;code&gt;rebase&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;I already attempted to do this without &lt;code&gt;pull.mode&lt;/code&gt; and instead using &lt;code&gt;pull.ff&lt;/code&gt; and &lt;code&gt;pull.rebase&lt;/code&gt;, but every approach ends up being very convoluted, and not as good.&lt;/p&gt; &lt;p&gt;But since other developers don&amp;#39;t want to accept I&amp;#39;m right, they are trying every failed approach I already tried. The last proposal came from Elijah Newren (who has a vendetta against me), and is in my opinion &lt;strong&gt;very&lt;/strong&gt; convoluted:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;conflicting command line flags results in the last one winning.&lt;/li&gt; &lt;li&gt;--no-rebase makes pull.ff determine the action.&lt;/li&gt; &lt;li&gt;--ff makes pull.rebase determine the action.&lt;/li&gt; &lt;li&gt;any other command line flag (-r|--rebase|--no-ff|--ff-only) overrides both pull.ff and pull.rebase&lt;/li&gt; &lt;li&gt;If no command line option is given, and pull.ff and pull.rebase conflict, then error out.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Clear? Check the &lt;a href="https://lore.kernel.org/git/CABPp-BHV4bkyKswbg0gBH8uJG7knH4fBC=fitRJK4_LCP50Tog@mail.gmail.com/"&gt;full explanation&lt;/a&gt; and let me know.&lt;/p&gt; &lt;p&gt;I &lt;a href="https://lore.kernel.org/git/60ec87d03f7c5_a231f20826@natae.notmuch/"&gt;explained to him&lt;/a&gt; why his proposal didn&amp;#39;t make sense: essentially &lt;code&gt;pull.rebase=true&lt;/code&gt; should be the same as &lt;code&gt;git pull --rebase&lt;/code&gt;. But as usual he &lt;strong&gt;ignored&lt;/strong&gt; me, and went ahead with it it:&lt;/p&gt; &lt;p&gt;&lt;a href="https://lore.kernel.org/git/pull.1047.git.git.1626316849.gitgitgadget@gmail.com/"&gt;Handle conflicting pull options&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In his proposal he made &lt;code&gt;pull.ff&lt;/code&gt; incompatible with &lt;code&gt;pull.rebase&lt;/code&gt;, and he was prompted by a mail from Son Luong Ngoc a day ago (which I already responded to correctly), who uses both configurations. &lt;a href="https://lore.kernel.org/git/CABPp-BEqnTuDgC0Bb+feFj=vBB48wdb60thO+Pq3N0jL74jH8Q@mail.gmail.com/"&gt;Elijah&amp;#39;s response&lt;/a&gt; is wrong:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;You probably want to drop one of these.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;No. Ngoc&amp;#39;s configuration is fine, it&amp;#39;s basically saying that he wants this:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;git pull&lt;/code&gt; -&amp;gt; &lt;code&gt;git pull --rebase&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;git pull --merge&lt;/code&gt; -&amp;gt; &lt;code&gt;git pull --merge --no-ff&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In other words &lt;code&gt;pull.ff&lt;/code&gt; should be ignored with &lt;code&gt;pull.rebase=false&lt;/code&gt;, but activated when the user specified &lt;code&gt;--merge&lt;/code&gt; in the command line, which changes the mode.&lt;/p&gt; &lt;p&gt;I &lt;a href="https://lore.kernel.org/git/60ef1f6a83b61_9460a208cc@natae.notmuch/"&gt;did explain that to him&lt;/a&gt;, but he ignored me and sent his patches.&lt;/p&gt; &lt;p&gt;I did explain it again in his patches, and he ignored me again. After both Junio and Elijah discuss among themselves (both ignoring me), Elijah finally came to the conclusion:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Okay, let&amp;#39;s drop this series then. Thanks for pointing out my mix-up on the rebase --no-ff thing in the other email.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;I&amp;#39;ve seen users in &lt;a href="/r/git"&gt;r/git&lt;/a&gt; understand how these configurations should interact better than developers, he should listen to users like Ngoc, not &lt;strong&gt;asume&lt;/strong&gt; his configuration was wrong (Ngoc still hasn&amp;#39;t replied yet). And of course, I&amp;#39;m the person who has worked on this topic the most, for many years. If he had listened to me he would have saved himself and other people in the project some time.&lt;/p&gt; &lt;p&gt;All they have to do is put their ego aside and accept my &lt;code&gt;pull.mode&lt;/code&gt; proposal is right.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/felipec"&gt; /u/felipec &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ol2u8r/an_example_of_a_pointless_discussion_in_the/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ol2u8r/an_example_of_a_pointless_discussion_in_the/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ol2u8r</id>
    <link href="https://www.reddit.com/r/git/comments/ol2u8r/an_example_of_a_pointless_discussion_in_the/"></link>
    <updated>2021-07-15T21:51:49+00:00</updated>
    <published>2021-07-15T21:51:49+00:00</published>
    <title>An example of a pointless discussion in the mailing list</title>
  </entry>
  <entry>
    <author>
      <name>/u/felipec</name>
      <uri>https://www.reddit.com/user/felipec</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;It&amp;#39;s not clear what these two options together should do, however, there&amp;#39;s a way in which they can be useful.&lt;/p&gt; &lt;p&gt;Do you have both of these options configured? And do you know how they can interact?&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.reddit.com/poll/omcngl"&gt;View Poll&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/felipec"&gt; /u/felipec &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omcngl/do_you_use_both_pullff_and_pullrebase/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omcngl/do_you_use_both_pullff_and_pullrebase/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_omcngl</id>
    <link href="https://www.reddit.com/r/git/comments/omcngl/do_you_use_both_pullff_and_pullrebase/"></link>
    <updated>2021-07-17T20:59:54+00:00</updated>
    <published>2021-07-17T20:59:54+00:00</published>
    <title>Do you use both pull.ff and pull.rebase?</title>
  </entry>
  <entry>
    <author>
      <name>/u/gabrielsfarias</name>
      <uri>https://www.reddit.com/user/gabrielsfarias</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I installed git and created a github account. I created the local and remote branches, but how should I use them together? I linked both master and both testing branches, is this correct/good practice? Or should I only have a remote master and have the other branches local only?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/gabrielsfarias"&gt; /u/gabrielsfarias &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/og1zc9/new_user_here_confused_about_git_usage/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/og1zc9/new_user_here_confused_about_git_usage/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_og1zc9</id>
    <link href="https://www.reddit.com/r/git/comments/og1zc9/new_user_here_confused_about_git_usage/"></link>
    <updated>2021-07-08T06:59:29+00:00</updated>
    <published>2021-07-08T06:59:29+00:00</published>
    <title>New user here, confused about git usage</title>
  </entry>
  <entry>
    <author>
      <name>/u/geshan</name>
      <uri>https://www.reddit.com/user/geshan</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/geshan"&gt; /u/geshan &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://flagsmith.com/blog/git-branching-and-feature-flags/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oj5pp4/use_feature_flags_and_smaller_pull_requests_to/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oj5pp4</id>
    <link href="https://www.reddit.com/r/git/comments/oj5pp4/use_feature_flags_and_smaller_pull_requests_to/"></link>
    <updated>2021-07-13T01:55:37+00:00</updated>
    <published>2021-07-13T01:55:37+00:00</published>
    <title>Use feature flags and smaller pull requests to release code safely in any git branching model</title>
  </entry>
  <entry>
    <author>
      <name>/u/guardian1691</name>
      <uri>https://www.reddit.com/user/guardian1691</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;This afternoon I wasn&amp;#39;t paying attention to which branch I was merging my &lt;code&gt;feature&lt;/code&gt; into and put it in &lt;code&gt;master&lt;/code&gt; instead of &lt;code&gt;develop&lt;/code&gt;. I deleted the &lt;code&gt;feature&lt;/code&gt; branch with the merge and started to panic since &lt;code&gt;develop&lt;/code&gt; was ahead of &lt;code&gt;master&lt;/code&gt;. So I reverted, but made the revert into &lt;code&gt;develop&lt;/code&gt;. So now my &lt;code&gt;master&lt;/code&gt; branch is &lt;code&gt;master + feature&lt;/code&gt;, and my &lt;code&gt;develop&lt;/code&gt; is &lt;code&gt;master before feature&lt;/code&gt;. I&amp;#39;m not really sure what to do next to get it to look like &lt;code&gt;master&lt;/code&gt; is what it was before I added &lt;code&gt;feature&lt;/code&gt;, and &lt;code&gt;develop&lt;/code&gt; is &lt;code&gt;develop + feature&lt;/code&gt;? All so that I can merge &lt;code&gt;develop + feature&lt;/code&gt; into &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/guardian1691"&gt; /u/guardian1691 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ofam1t/merged_into_master_reverted_into_develop_not_sure/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ofam1t/merged_into_master_reverted_into_develop_not_sure/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ofam1t</id>
    <link href="https://www.reddit.com/r/git/comments/ofam1t/merged_into_master_reverted_into_develop_not_sure/"></link>
    <updated>2021-07-07T03:17:24+00:00</updated>
    <published>2021-07-07T03:17:24+00:00</published>
    <title>Merged into master, reverted into develop. Not sure what to do next</title>
  </entry>
  <entry>
    <author>
      <name>/u/himzo_polovina</name>
      <uri>https://www.reddit.com/user/himzo_polovina</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am currently setting up a new repo, and tried to implement git-flow as the branching strategy (which I got from here: &lt;a href="https://nvie.com/posts/a-successful-git-branching-model/"&gt;Link&lt;/a&gt; )&lt;/p&gt; &lt;p&gt;Everything inside the article makes sense, but just the release branching is a thing I don&amp;#39;t quite get. In the article it is said that a release branch should be created when we decide to create a new release of our software (which makes sense). So lets say we want to release the version 4.0.0.First step, I create a release branch with the name release-4.0.0. Since In our case it is an iOS application, I want to upload it to TestFlight, so it can get tested and after some time, and if no problems occur, the app will be published to the App Store. But, how it usually is, there is a bug reported from TestFlight, and it needs to be fixed inside the release-4.0.0 branch. Now comes my problem, after the bugfix, the app needs to be uploaded to TestFlight again, but this time I cannot use version 4.0.0, but I need to update it to 4.0.1 In this case the branch doesn&amp;#39;t fit the possible release version (because if this version gets released, It will have the number 4.0.1 but not 4.0.0). Now, should the branch be renamed (remotely and locally) to 4.0.1, or is it just the tag that is important, which will eventually be set when the app really gets released (which could be with version 4.0.22 if there are lots of bugs being reported from the testers)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/himzo_polovina"&gt; /u/himzo_polovina &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ojpsbv/propper_branching_strategy_gitflow/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ojpsbv/propper_branching_strategy_gitflow/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ojpsbv</id>
    <link href="https://www.reddit.com/r/git/comments/ojpsbv/propper_branching_strategy_gitflow/"></link>
    <updated>2021-07-13T21:45:34+00:00</updated>
    <published>2021-07-13T21:45:34+00:00</published>
    <title>Propper branching strategy (git-flow)</title>
  </entry>
  <entry>
    <author>
      <name>/u/hydreichomp</name>
      <uri>https://www.reddit.com/user/hydreichomp</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Trying to learn git so I ran &amp;quot;man git&amp;quot;.&lt;/p&gt; &lt;p&gt;It says &amp;quot;See gittutorial(7) to get started&amp;quot;.&lt;/p&gt; &lt;p&gt;I tried running &amp;quot;gittutorial&amp;quot; from my command line and it says command not found.&lt;/p&gt; &lt;p&gt;How do I run it then?&lt;/p&gt; &lt;p&gt;If it&amp;#39;s relevant, I am trying this on the Mac Terminal with zsh.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/hydreichomp"&gt; /u/hydreichomp &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oigkuw/how_to_run_gittutorial/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oigkuw/how_to_run_gittutorial/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oigkuw</id>
    <link href="https://www.reddit.com/r/git/comments/oigkuw/how_to_run_gittutorial/"></link>
    <updated>2021-07-12T00:52:22+00:00</updated>
    <published>2021-07-12T00:52:22+00:00</published>
    <title>How to run gittutorial?</title>
  </entry>
  <entry>
    <author>
      <name>/u/im_the_tea_drinker_</name>
      <uri>https://www.reddit.com/user/im_the_tea_drinker_</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I press initialize repository by accident and I would like to undo it as I don&amp;#39;t fully understand what it does yet. How to I pit it back to the normal file system? Sorry I am really new to coding and have never used git before. It a lot of things to take in. Thank you and sorry I did try Google but did not understand it.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/im_the_tea_drinker_"&gt; /u/im_the_tea_drinker_ &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ohjwq2/how_to_remove_git_from_a_vs_code_file/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ohjwq2/how_to_remove_git_from_a_vs_code_file/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ohjwq2</id>
    <link href="https://www.reddit.com/r/git/comments/ohjwq2/how_to_remove_git_from_a_vs_code_file/"></link>
    <updated>2021-07-10T14:40:47+00:00</updated>
    <published>2021-07-10T14:40:47+00:00</published>
    <title>How to remove git from a vs code file.</title>
  </entry>
  <entry>
    <author>
      <name>/u/javascript_dev</name>
      <uri>https://www.reddit.com/user/javascript_dev</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I now have two remotes. One is from my company, and the other is is from my local computer (the &amp;quot;main&amp;quot; repo I refer to here is on an EC2 instance which my local computer may not access the company repo from).&lt;/p&gt; &lt;p&gt;I&amp;#39;m using git bundle to add the 2nd remote and it&amp;#39;s working well on my tests so far. Before I use this I wanted to know if it&amp;#39;s basically the same as having one remote, where when you pull, you need to clear merge conflicts right away each time. I think that situation will just happen a bit more since there are two remotes; is that correct?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/javascript_dev"&gt; /u/javascript_dev &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oiaom8/working_with_two_remotes/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oiaom8/working_with_two_remotes/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oiaom8</id>
    <link href="https://www.reddit.com/r/git/comments/oiaom8/working_with_two_remotes/"></link>
    <updated>2021-07-11T19:15:57+00:00</updated>
    <published>2021-07-11T19:15:57+00:00</published>
    <title>Working with two remotes</title>
  </entry>
  <entry>
    <author>
      <name>/u/juristr</name>
      <uri>https://www.reddit.com/user/juristr</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/juristr"&gt; /u/juristr &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://youtu.be/JoZalb4N1G8"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogrc0f/find_the_first_bad_commit_that_broke_your_app/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ogrc0f</id>
    <link href="https://www.reddit.com/r/git/comments/ogrc0f/find_the_first_bad_commit_that_broke_your_app/"></link>
    <updated>2021-07-09T08:32:00+00:00</updated>
    <published>2021-07-09T08:32:00+00:00</published>
    <title>Find the first bad commit that broke your App with Git bisect!</title>
  </entry>
  <entry>
    <author>
      <name>/u/kautica0</name>
      <uri>https://www.reddit.com/user/kautica0</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;If two users were assigned tasks to add features to a software and this requires both users to modify the same file, how should the git workflow be handled? Should one user wait until the other’s PR is merged to the main branch before starting? There should not be any code conflicts since they will just be adding their own methods to a class.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/kautica0"&gt; /u/kautica0 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/of0ajv/two_user_creating_a_pr_to_commit_changes_to_same/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/of0ajv/two_user_creating_a_pr_to_commit_changes_to_same/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_of0ajv</id>
    <link href="https://www.reddit.com/r/git/comments/of0ajv/two_user_creating_a_pr_to_commit_changes_to_same/"></link>
    <updated>2021-07-06T17:56:59+00:00</updated>
    <published>2021-07-06T17:56:59+00:00</published>
    <title>Two user creating a PR to commit changes to same file</title>
  </entry>
  <entry>
    <author>
      <name>/u/kevnuke</name>
      <uri>https://www.reddit.com/user/kevnuke</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;So I was talking to this girl at a coffee shop and the subject of relationships came up. She told me she was tired of guys that were afraid to commit. I told her I have no problem with that, I use Git. She stared at me blankly for a few seconds. #NotTheOne&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/kevnuke"&gt; /u/kevnuke &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ol2tsg/girl_doesnt_git_it/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ol2tsg/girl_doesnt_git_it/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ol2tsg</id>
    <link href="https://www.reddit.com/r/git/comments/ol2tsg/girl_doesnt_git_it/"></link>
    <updated>2021-07-15T21:51:04+00:00</updated>
    <published>2021-07-15T21:51:04+00:00</published>
    <title>Girl doesn't Git it</title>
  </entry>
  <entry>
    <author>
      <name>/u/kolibril13</name>
      <uri>https://www.reddit.com/user/kolibril13</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/kolibril13"&gt; /u/kolibril13 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://i.redd.it/fiasvld677c71.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/onhucu/is_it_a_good_idea_to_have_git_workflow_in_a/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_onhucu</id>
    <link href="https://www.reddit.com/r/git/comments/onhucu/is_it_a_good_idea_to_have_git_workflow_in_a/"></link>
    <updated>2021-07-19T16:42:59+00:00</updated>
    <published>2021-07-19T16:42:59+00:00</published>
    <title>Is it a good idea to have git workflow in a Jupyter notebook? 🤔</title>
  </entry>
  <entry>
    <author>
      <name>/u/lady-lurker</name>
      <uri>https://www.reddit.com/user/lady-lurker</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi, i&amp;#39;m using these instructions to upload my folder:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd existing_folder git init git remote add origin [remote url] git add . git commit git push -u origin master &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;yet when I run &lt;code&gt;git status&lt;/code&gt; It says there are no commits? Am I missing something else?&lt;/p&gt; &lt;p&gt;When I run &lt;code&gt;git commit -m &amp;quot;initial commit&amp;quot;&lt;/code&gt; I get the error &lt;/p&gt; &lt;pre&gt;&lt;code&gt;fatal cannot update the ref &amp;#39;head&amp;#39; unable to append to &amp;#39;.git/logs/head&amp;#39; invalid argument &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/lady-lurker"&gt; /u/lady-lurker &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/onjpzq/getting_errors_uploading_existing_folder_onto/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/onjpzq/getting_errors_uploading_existing_folder_onto/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_onjpzq</id>
    <link href="https://www.reddit.com/r/git/comments/onjpzq/getting_errors_uploading_existing_folder_onto/"></link>
    <updated>2021-07-19T18:12:28+00:00</updated>
    <published>2021-07-19T18:12:28+00:00</published>
    <title>Getting errors uploading existing folder onto GitLab using Git</title>
  </entry>
  <entry>
    <author>
      <name>/u/leodevbro</name>
      <uri>https://www.reddit.com/user/leodevbro</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Check out my VSCode extension - Blockman, took me 6 months to build. It&amp;#39;s free. Please help me promote/share/rate if you like it. You can customize block colors, depth, turn on/off focus, curly/square/round brackets, tags, python indentation and more.....&lt;/p&gt; &lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=leodevbro.blockman"&gt;https://marketplace.visualstudio.com/items?itemName=leodevbro.blockman&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Supports Python, R, Go, Dart, Rust, PHP, JavaScript, JSX, TypeScript, TSX, C, C#, C++, Java, HTML, CSS and more...&lt;/p&gt; &lt;p&gt;This post in react.js community:&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.reddit.com/r/reactjs/comments/nwjr0b/idea_highlight_nested_code_blocks_with_boxes/"&gt;https://www.reddit.com/r/reactjs/comments/nwjr0b/idea_highlight_nested_code_blocks_with_boxes/&lt;/a&gt; &lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/dbi6598899971.png?width=957&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=4351770ba1b1bd7965cd845b0dc0dafc9162a461"&gt;https://preview.redd.it/dbi6598899971.png?width=957&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=4351770ba1b1bd7965cd845b0dc0dafc9162a461&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/leodevbro"&gt; /u/leodevbro &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odsas5/new_vscode_extension_blockman_to_highlight_nested/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odsas5/new_vscode_extension_blockman_to_highlight_nested/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_odsas5</id>
    <link href="https://www.reddit.com/r/git/comments/odsas5/new_vscode_extension_blockman_to_highlight_nested/"></link>
    <updated>2021-07-04T20:24:52+00:00</updated>
    <published>2021-07-04T20:24:52+00:00</published>
    <title>NEW VSCode extension "Blockman" to highlight nested code blocks</title>
  </entry>
  <entry>
    <author>
      <name>/u/lestrenched</name>
      <uri>https://www.reddit.com/user/lestrenched</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;For example,&lt;/p&gt; &lt;p&gt;&lt;code&gt; commit &amp;lt;super-long-hash&amp;gt; Author: None &amp;lt;None&amp;gt; Date: Sat Jul 10 05:19:13 2021 -0700 &lt;/code&gt;&lt;/p&gt; &lt;p&gt;I don&amp;#39;t understand why this is happening. I&amp;#39;ve tried searching for it, but no results. This is affecting my commits, my GitHub repo says &amp;quot;None commited &amp;lt;commit message&amp;gt;&amp;quot;. Please help.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/lestrenched"&gt; /u/lestrenched &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oi7u9w/helpwhy_do_my_commits_show_none_as_author/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oi7u9w/helpwhy_do_my_commits_show_none_as_author/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oi7u9w</id>
    <link href="https://www.reddit.com/r/git/comments/oi7u9w/helpwhy_do_my_commits_show_none_as_author/"></link>
    <updated>2021-07-11T16:41:57+00:00</updated>
    <published>2021-07-11T16:41:57+00:00</published>
    <title>[HELP]Why do my commits show "None" as author?</title>
  </entry>
  <entry>
    <author>
      <name>/u/maxi1kiano</name>
      <uri>https://www.reddit.com/user/maxi1kiano</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello everybody! Does anyone have a procedure to delete old commits and leave a clean history? for example leave the last and previous one? I run a rebase but history is not clean...show me (master | rebase). I do not want to remove .git folder and start again. Thank you.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/maxi1kiano"&gt; /u/maxi1kiano &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ofsqgv/howto_get_a_clean_history/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ofsqgv/howto_get_a_clean_history/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ofsqgv</id>
    <link href="https://www.reddit.com/r/git/comments/ofsqgv/howto_get_a_clean_history/"></link>
    <updated>2021-07-07T21:38:27+00:00</updated>
    <published>2021-07-07T21:38:27+00:00</published>
    <title>Howto get a clean history.</title>
  </entry>
  <entry>
    <author>
      <name>/u/mokkapps</name>
      <uri>https://www.reddit.com/user/mokkapps</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/mokkapps"&gt; /u/mokkapps &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.mokkapps.de/blog/use-git-bisect-to-find-the-commit-that-introduced-a-bug"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ofdsvj/use_git_bisect_to_find_the_commit_that_introduced/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ofdsvj</id>
    <link href="https://www.reddit.com/r/git/comments/ofdsvj/use_git_bisect_to_find_the_commit_that_introduced/"></link>
    <updated>2021-07-07T07:04:08+00:00</updated>
    <published>2021-07-07T07:04:08+00:00</published>
    <title>Use Git Bisect to Find the Commit That Introduced a Bug</title>
  </entry>
  <entry>
    <author>
      <name>/u/nathanieloffer</name>
      <uri>https://www.reddit.com/user/nathanieloffer</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I created a remote repo today, then initialized the local folder added a file and pushed it to GitHub later I added a README and a LICENSE, created a new branch and made some progress there then committed and pushed that up to remote as well.&lt;/p&gt; &lt;p&gt;It was at this point I realized I had edited the README under main on GitHub directly and not pulled it to my local machine. &lt;/p&gt; &lt;p&gt;Is there a way to sync my local project with the remote under main without affecting the work I&amp;#39;ve done in my new branch?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/nathanieloffer"&gt; /u/nathanieloffer &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oiaofa/advise_for_stumbling_newbie/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oiaofa/advise_for_stumbling_newbie/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oiaofa</id>
    <link href="https://www.reddit.com/r/git/comments/oiaofa/advise_for_stumbling_newbie/"></link>
    <updated>2021-07-11T19:15:40+00:00</updated>
    <published>2021-07-11T19:15:40+00:00</published>
    <title>Advise for stumbling newbie</title>
  </entry>
  <entry>
    <author>
      <name>/u/ntolbertu85</name>
      <uri>https://www.reddit.com/user/ntolbertu85</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;On windows, using Git Bash, I was able to push files to my github and avoid entering username and password, but I do not remember how I set it up.&lt;/p&gt; &lt;p&gt;Now i am on Ubuntu, and I cannot find anything on how to achieve this. Is it a config option? &lt;/p&gt; &lt;p&gt;Thanks in advance.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/ntolbertu85"&gt; /u/ntolbertu85 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odd97y/how_to_configure_in_order_to_avoid_entering/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/odd97y/how_to_configure_in_order_to_avoid_entering/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_odd97y</id>
    <link href="https://www.reddit.com/r/git/comments/odd97y/how_to_configure_in_order_to_avoid_entering/"></link>
    <updated>2021-07-04T04:31:59+00:00</updated>
    <published>2021-07-04T04:31:59+00:00</published>
    <title>How to configure in order to avoid entering github credentials</title>
  </entry>
  <entry>
    <author>
      <name>/u/pink_aura2</name>
      <uri>https://www.reddit.com/user/pink_aura2</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello everyone!, I&amp;#39;m new to Git and Github and I was just reading the official Git and Github documentation, googled some stuff as well but I still have some questions, so I wanted to know your recommendations: &lt;/p&gt; &lt;p&gt;-Do you recommend me to use the noreply email that Github gives me instead of using my personal email that I configured in Git Bash?. Is it true that if I use my personal email in Github to post, i&amp;#39;ll receive spam all the time?&lt;/p&gt; &lt;p&gt;-If I use the noreply email from Github and use it as my global user.email in Git Bash then it could be a problem if I want to create a GitLab account to publish projects there as well?. &lt;/p&gt; &lt;p&gt;I do apologize for the stupid questions and for my broken English (English isn&amp;#39;t my native language) but I really wanted to know your opinions and recommendations. Thanks in advance!.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/pink_aura2"&gt; /u/pink_aura2 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ollb8s/hello_everyone_i_need_your_advice_regarding/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ollb8s/hello_everyone_i_need_your_advice_regarding/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ollb8s</id>
    <link href="https://www.reddit.com/r/git/comments/ollb8s/hello_everyone_i_need_your_advice_regarding/"></link>
    <updated>2021-07-16T17:13:36+00:00</updated>
    <published>2021-07-16T17:13:36+00:00</published>
    <title>Hello everyone!, I need your advice regarding user.email , Git, Github, GitLab and noreply email.</title>
  </entry>
  <entry>
    <author>
      <name>/u/polaris64</name>
      <uri>https://www.reddit.com/user/polaris64</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;For example, say I wanted to place a directory tree under version control so that I can track filename changes, moving, copying and deletion, but I don&amp;#39;t want to store the content of the files themselves.&lt;/p&gt; &lt;p&gt;This would be similar to generating a recursive file listing as a text file, then using Git to control that. I&amp;#39;m wondering though if there&amp;#39;s a way to ignore file contents to allow this sort of thing directly?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/polaris64"&gt; /u/polaris64 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/og6xhr/question_can_git_be_used_to_store_trees_only/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/og6xhr/question_can_git_be_used_to_store_trees_only/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_og6xhr</id>
    <link href="https://www.reddit.com/r/git/comments/og6xhr/question_can_git_be_used_to_store_trees_only/"></link>
    <updated>2021-07-08T13:12:35+00:00</updated>
    <published>2021-07-08T13:12:35+00:00</published>
    <title>Question: can Git be used to store trees only without storing the contents of files within them?</title>
  </entry>
  <entry>
    <author>
      <name>/u/prophecy_guy</name>
      <uri>https://www.reddit.com/user/prophecy_guy</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi,&lt;br/&gt; I&amp;#39;m wondering how to handle features which develop takes a long (like months) on git with best practices. Should they be constantly promoted into master? If so I guess there is necessary to use feature toggles to hide them from users, but feature toggles are described a s a not best practice. Maybe they should be develop on separate feature branches till finish. But constant rebasing to master might be bothersome. And also long running branches are opposite of continuous integration I guess.&lt;/p&gt; &lt;p&gt;Any tips with good practices?&lt;/p&gt; &lt;p&gt;Thanks&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/prophecy_guy"&gt; /u/prophecy_guy &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oinw2h/pushing_unfinished_feauters_on_master/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oinw2h/pushing_unfinished_feauters_on_master/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oinw2h</id>
    <link href="https://www.reddit.com/r/git/comments/oinw2h/pushing_unfinished_feauters_on_master/"></link>
    <updated>2021-07-12T09:34:07+00:00</updated>
    <published>2021-07-12T09:34:07+00:00</published>
    <title>Pushing unfinished feauters on master</title>
  </entry>
  <entry>
    <author>
      <name>/u/prosperousdoggo</name>
      <uri>https://www.reddit.com/user/prosperousdoggo</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have a main branch from which we take out branches (feature branches). So in my first feature branch (feature A) I added some code. I took another feature branch( this time from feature A) and removed that code I added as part of (feature A)&lt;/p&gt; &lt;p&gt;So it looks something like this now. &lt;/p&gt; &lt;p&gt;main&lt;br/&gt; |--------feature A&lt;br/&gt; |-----------feature B&lt;/p&gt; &lt;p&gt;Now feature A is merged with main and I merge the code from main to my feature branch B to get others code as well. What happened was the code that I removed from feature branch B got added automatically(since this code is now in main from feature A) during reverse merge without showing a merge conflict. And this caused a bug since it went unnoticed. &lt;/p&gt; &lt;p&gt;I was under the impression that whatever change in my feature branch when it tries to change during a merge you get a conflict and you can resolve it. I did not expect this silent addition to happen. I&amp;#39;m not really able to replicate this case either. &lt;/p&gt; &lt;p&gt;Can someone pls help me throw some light on this. And also how I can avoid this in future?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/prosperousdoggo"&gt; /u/prosperousdoggo &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/om6vow/help_me_understand_how_this_happened/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/om6vow/help_me_understand_how_this_happened/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_om6vow</id>
    <link href="https://www.reddit.com/r/git/comments/om6vow/help_me_understand_how_this_happened/"></link>
    <updated>2021-07-17T15:55:12+00:00</updated>
    <published>2021-07-17T15:55:12+00:00</published>
    <title>Help me understand how this happened.</title>
  </entry>
  <entry>
    <author>
      <name>/u/pythonprogrammer64</name>
      <uri>https://www.reddit.com/user/pythonprogrammer64</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;How I can clone a repo in a such a manner than I download all of the branches and I keep track of all of the changes. For example is some lines on the remote repo gets deleted I will keep track of the changes and I will be able to roll back to them ?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/pythonprogrammer64"&gt; /u/pythonprogrammer64 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oi0cos/cloning_a_repo/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oi0cos/cloning_a_repo/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oi0cos</id>
    <link href="https://www.reddit.com/r/git/comments/oi0cos/cloning_a_repo/"></link>
    <updated>2021-07-11T07:55:19+00:00</updated>
    <published>2021-07-11T07:55:19+00:00</published>
    <title>Cloning a repo</title>
  </entry>
  <entry>
    <author>
      <name>/u/raviverma9334</name>
      <uri>https://www.reddit.com/user/raviverma9334</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/raviverma9334"&gt; /u/raviverma9334 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://youtube.com/watch?v=9gpEmOYzmXs&amp;amp;feature=share"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ohdtic/git_tutorials_github_tutorials_git_using_github/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ohdtic</id>
    <link href="https://www.reddit.com/r/git/comments/ohdtic/git_tutorials_github_tutorials_git_using_github/"></link>
    <updated>2021-07-10T06:53:00+00:00</updated>
    <published>2021-07-10T06:53:00+00:00</published>
    <title>Git Tutorials | Github Tutorials | Git using Github Crash Course - PART ...</title>
  </entry>
  <entry>
    <author>
      <name>/u/raviverma9334</name>
      <uri>https://www.reddit.com/user/raviverma9334</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/raviverma9334"&gt; /u/raviverma9334 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://youtube.com/watch?v=Y_-PUeuyUJY&amp;amp;feature=share"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/og3gep/git_tutorials_github_tutorials_git_using_github/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_og3gep</id>
    <link href="https://www.reddit.com/r/git/comments/og3gep/git_tutorials_github_tutorials_git_using_github/"></link>
    <updated>2021-07-08T09:02:46+00:00</updated>
    <published>2021-07-08T09:02:46+00:00</published>
    <title>Git Tutorials | Github Tutorials | Git using Github Crash Course - PART ...</title>
  </entry>
  <entry>
    <author>
      <name>/u/raylech1986it</name>
      <uri>https://www.reddit.com/user/raylech1986it</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;m thinking about creating a course (Udemy, Kajabi, where ever, doesn&amp;#39;t matter) specifically for Linux System administrators who want to leverage Git and Github for version controlling their scripts.&lt;/p&gt; &lt;p&gt;We all know the hassles of creating and managing multiple files with different names for the same script and with too many and outdated comments…&lt;/p&gt; &lt;p&gt;If anyone is interested, comment below on what kind of information you&amp;#39;d want in a course like that.&lt;/p&gt; &lt;p&gt;What’s your biggest struggle, if any, with learning Git and Github?&lt;/p&gt; &lt;p&gt;And which of those struggles would you be willing to pay money for to get help with.&lt;/p&gt; &lt;p&gt;Thank you for your time.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/raylech1986it"&gt; /u/raylech1986it &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oigya2/linuxgit_market_research/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oigya2/linuxgit_market_research/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oigya2</id>
    <link href="https://www.reddit.com/r/git/comments/oigya2/linuxgit_market_research/"></link>
    <updated>2021-07-12T01:15:17+00:00</updated>
    <published>2021-07-12T01:15:17+00:00</published>
    <title>LINUX/GIT MARKET RESEARCH</title>
  </entry>
  <entry>
    <author>
      <name>/u/sclient739</name>
      <uri>https://www.reddit.com/user/sclient739</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Git from Basics to Advanced: Practical Guide for Developers&lt;/p&gt; &lt;p&gt;----------------------------------------------------------------------&lt;/p&gt; &lt;p&gt;&lt;strong&gt;What you Will learn ?&lt;/strong&gt;&lt;/p&gt; &lt;h1&gt;&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Git 🙂&lt;/li&gt; &lt;li&gt;Learn the key concept of Git&lt;/li&gt; &lt;li&gt;Perform basic and advanced git operations&lt;/li&gt; &lt;li&gt;Manage branches, solve merge conflicts like a PRO&lt;/li&gt; &lt;li&gt;How to work with GitHub&lt;/li&gt; &lt;li&gt;Manage Local and Remote repositories&lt;/li&gt; &lt;li&gt;Manage files with Git in your filesystem&lt;/li&gt; &lt;li&gt;Rebasing in git&lt;/li&gt; &lt;li&gt;How to develop software in team using git&lt;/li&gt; &lt;li&gt;Step through the entire Git workflow&lt;/li&gt; &lt;li&gt;Best practices of using git&lt;/li&gt; &lt;li&gt;How to keep git history clean&lt;/li&gt; &lt;li&gt;Real-life cases of using git&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;[100% OFF] Git from Basics to Advanced: Practical Guide for Developers&lt;/p&gt; &lt;p&gt;&lt;a href="https://unitedaca.com/100-off-git-from-basics-to-advanced-practical-guide-for-developers-13/"&gt;https://unitedaca.com/100-off-git-from-basics-to-advanced-practical-guide-for-developers-13/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;Coupon Code : GIT_JUL_FREE&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;This course includes:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;3.5 hours on-demand video&lt;/li&gt; &lt;li&gt;2 articles&lt;/li&gt; &lt;li&gt;Full lifetime access&lt;/li&gt; &lt;li&gt;Access on mobile and TV&lt;/li&gt; &lt;li&gt;Certificate of completion&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/sclient739"&gt; /u/sclient739 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ohwtar/git_from_basics_to_advanced_practical_guide_for/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ohwtar/git_from_basics_to_advanced_practical_guide_for/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ohwtar</id>
    <link href="https://www.reddit.com/r/git/comments/ohwtar/git_from_basics_to_advanced_practical_guide_for/"></link>
    <updated>2021-07-11T03:18:15+00:00</updated>
    <published>2021-07-11T03:18:15+00:00</published>
    <title>Git from Basics to Advanced: Practical Guide for Developers</title>
  </entry>
  <entry>
    <author>
      <name>/u/sharpvik</name>
      <uri>https://www.reddit.com/user/sharpvik</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;A few days ago, a friend of mine introduced me to the concept of semantic commit messages. As I understand, it comes from a few places, but mainly from &lt;a href="https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits"&gt;Angular&amp;#39;s Commit Guide&lt;/a&gt;. Long story short, you just format your commits as follows:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;TYPE(SCOPE): MESSAGE &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Where SCOPE describes the scope of changes introduced by commit, MESSAGE summarises those changes, and TYPE is a short tag from the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;feat&lt;/code&gt;: new feature for the user&lt;/li&gt; &lt;li&gt;&lt;code&gt;fix&lt;/code&gt;: bug fix for the user&lt;/li&gt; &lt;li&gt;&lt;code&gt;docs&lt;/code&gt;: changes to the documentation&lt;/li&gt; &lt;li&gt;&lt;code&gt;style&lt;/code&gt;: formatting with no production code change&lt;/li&gt; &lt;li&gt;&lt;code&gt;refactor&lt;/code&gt;: refactoring production code&lt;/li&gt; &lt;li&gt;&lt;code&gt;test&lt;/code&gt;: adding missing tests, refactoring tests&lt;/li&gt; &lt;li&gt;&lt;code&gt;chore&lt;/code&gt;: updating grunt tasks&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href="https://gist.github.com/joshbuchea/6f47e86d2510bce28f8e7f42ae84c716"&gt;This gist&lt;/a&gt; summarises it perfectly! I find this system to be incredibly useful and clear upon code review. &lt;/p&gt; &lt;p&gt;So I made a small command-line tool called &lt;code&gt;sema&lt;/code&gt; that helps you follow these guidelines with no effort on your part to memorise labels or double-check things. It&amp;#39;s open-source and you can check it out in &lt;a href="https://github.com/sharpvik/sema"&gt;this GitHub repo&lt;/a&gt; if you&amp;#39;re interested.&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/yiuvn9oz90b71.png?width=1163&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=54c35ed947b01b1d02860a65d8969a32834cdc57"&gt;Semantic commit tag dropdown selection menu&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I appreciate that some of you may want to use some custom tags like &lt;code&gt;perf&lt;/code&gt; or &lt;code&gt;ci&lt;/code&gt; so I refactored the code s.t. all tags are stored within the &lt;code&gt;label.go&lt;/code&gt; file. Fork the repo and change them! Any changes to the tags&amp;#39; table will be reflected throughout the rest of the app!&lt;/p&gt; &lt;p&gt;Hope you have a great and productive day!&lt;/p&gt; &lt;p&gt;P. S. All contributions, bug reports, suggestions and issues are welcome!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/sharpvik"&gt; /u/sharpvik &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ojj750/semantic_commits_with_sema/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ojj750/semantic_commits_with_sema/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ojj750</id>
    <link href="https://www.reddit.com/r/git/comments/ojj750/semantic_commits_with_sema/"></link>
    <updated>2021-07-13T16:28:53+00:00</updated>
    <published>2021-07-13T16:28:53+00:00</published>
    <title>Semantic Commits With 'sema'</title>
  </entry>
  <entry>
    <author>
      <name>/u/shayanbahal</name>
      <uri>https://www.reddit.com/user/shayanbahal</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/shayanbahal"&gt; /u/shayanbahal &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.youtube.com/watch?v=zBwf81Ahtew"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ol1065/the_heart_of_diligence_cool_git_visualization_of/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ol1065</id>
    <link href="https://www.reddit.com/r/git/comments/ol1065/the_heart_of_diligence_cool_git_visualization_of/"></link>
    <updated>2021-07-15T20:17:58+00:00</updated>
    <published>2021-07-15T20:17:58+00:00</published>
    <title>The Heart of Diligence - Cool Git visualization of collaborative work</title>
  </entry>
  <entry>
    <author>
      <name>/u/simbapk</name>
      <uri>https://www.reddit.com/user/simbapk</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/simbapk"&gt; /u/simbapk &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://i.redd.it/0sbzhp9fqz971.gif"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/og7706/git_tag_release_utility/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_og7706</id>
    <link href="https://www.reddit.com/r/git/comments/og7706/git_tag_release_utility/"></link>
    <updated>2021-07-08T13:27:51+00:00</updated>
    <published>2021-07-08T13:27:51+00:00</published>
    <title>Git tag release utility</title>
  </entry>
  <entry>
    <author>
      <name>/u/spalza</name>
      <uri>https://www.reddit.com/user/spalza</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;At my company, each developer has his own EC2 login where his repo is stored. Normally we will connect VsCode directly to this instance and use it as a mounted drive. Pushes and pulls are done to the remote from here.&lt;/p&gt; &lt;p&gt;In my case the drive is quite slow due to my slow internet at home. A senior developer is helping me get the repo from my EC2 instance via zipping script, SCP it to my local, and overwrite my local files (every time I do this). The reverse would be done when I&amp;#39;m ready to update the EC2 instance. This is a workaround until we can configure EC2 as a remote; at the current moment it seems configured but fails to push and pull.&lt;/p&gt; &lt;p&gt;I asked him if there is potential for information loss if I manually overwrite my local files from EC2. He said no because git will keep the latest branch information. Is this correct?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/spalza"&gt; /u/spalza &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oi0ymn/manual_overwrites_will_git_info_be_lost/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oi0ymn/manual_overwrites_will_git_info_be_lost/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oi0ymn</id>
    <link href="https://www.reddit.com/r/git/comments/oi0ymn/manual_overwrites_will_git_info_be_lost/"></link>
    <updated>2021-07-11T08:49:31+00:00</updated>
    <published>2021-07-11T08:49:31+00:00</published>
    <title>Manual overwrites - will git info be lost</title>
  </entry>
  <entry>
    <author>
      <name>/u/spalza</name>
      <uri>https://www.reddit.com/user/spalza</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Recently I have taken these steps&lt;/p&gt; &lt;ol&gt; &lt;li&gt;git fetch aliasName. CLI output shows new branches fetched from the remote&lt;/li&gt; &lt;li&gt;git switch newBranchName. Instantly I receive the new updates to this branch&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Wait a minute... I thought fetching only downloads git information. And merging actually downloads changes and updates to files.&lt;/p&gt; &lt;p&gt;Is this incorrect? Or does it only apply to known branches (new are auto-merged)?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/spalza"&gt; /u/spalza &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ondb5p/fetch_without_merge_does_more_than_expected/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ondb5p/fetch_without_merge_does_more_than_expected/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ondb5p</id>
    <link href="https://www.reddit.com/r/git/comments/ondb5p/fetch_without_merge_does_more_than_expected/"></link>
    <updated>2021-07-19T12:44:07+00:00</updated>
    <published>2021-07-19T12:44:07+00:00</published>
    <title>Fetch without merge does more than expected</title>
  </entry>
  <entry>
    <author>
      <name>/u/stampedep</name>
      <uri>https://www.reddit.com/user/stampedep</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi,&lt;/p&gt; &lt;p&gt;I have a public repo which I&amp;#39;m able to update via the main branch, that is: &lt;/p&gt; &lt;pre&gt;&lt;code&gt;git push -u origin main &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;which works without issues. On the flip side should I try to upload the main branch I get an error,&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git push origin master error: src refspec master does not match any error: failed to push some refs to &amp;#39;git@github.com:pchrz/HFPython.git&amp;#39; &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;So while I can keep running the first command isn&amp;#39;t doing &amp;quot;git push origin master&amp;quot; the branch that should be used? What are my advantages and disadvantages of operating in this way?&lt;/p&gt; &lt;p&gt;What is the refspec issue, and how to avoid that? &lt;/p&gt; &lt;p&gt;Any advice is appreciated, this seems like a great learning example. &lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/pchrz/HFPython"&gt;https://github.com/pchrz/HFPython&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/stampedep"&gt; /u/stampedep &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ofwvgs/understanding_main_vs_master_branches/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ofwvgs/understanding_main_vs_master_branches/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ofwvgs</id>
    <link href="https://www.reddit.com/r/git/comments/ofwvgs/understanding_main_vs_master_branches/"></link>
    <updated>2021-07-08T01:25:14+00:00</updated>
    <published>2021-07-08T01:25:14+00:00</published>
    <title>Understanding Main vs Master branches</title>
  </entry>
  <entry>
    <author>
      <name>/u/starboyram</name>
      <uri>https://www.reddit.com/user/starboyram</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey I cloned a GitHub repo using !git clone URL , In Colab and even in CMD I tried. After downloading also(I can see files downloading in CMD) it doesn&amp;#39;t show the contents from that git repo, they&amp;#39;re kinda missing but they&amp;#39;re present in the repo I can see them in repo it&amp;#39;s present there. Why is that happening ??&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/starboyram"&gt; /u/starboyram &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/old13e/cloning_git_repo/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/old13e/cloning_git_repo/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_old13e</id>
    <link href="https://www.reddit.com/r/git/comments/old13e/cloning_git_repo/"></link>
    <updated>2021-07-16T08:57:27+00:00</updated>
    <published>2021-07-16T08:57:27+00:00</published>
    <title>Cloning git repo</title>
  </entry>
  <entry>
    <author>
      <name>/u/supermap</name>
      <uri>https://www.reddit.com/user/supermap</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi, im kind of a beginner to this but i&amp;#39;d really appreciate some help.&lt;/p&gt; &lt;p&gt;In my business we are using gitlab for our projects, but we see an application that we also want to use. Unfortunately it does not have gitlab integration, but it does have github integration. I know they both just use git, but I&amp;#39;d like to know if its possible to use the github integration to integrate our gitlab project, or they are just too incompatible.&lt;/p&gt; &lt;p&gt;Maybe there is a way to mirror a gitlab project on github and then integrate it. Honestly I don&amp;#39;t know enough and i&amp;#39;ve been looking online, but i&amp;#39;d like an opinion on how viable do you think this would be.&lt;/p&gt; &lt;p&gt;Btw the application im trying to integrate is Deepnote, a shared python notebook application.&lt;/p&gt; &lt;p&gt;Thanks!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/supermap"&gt; /u/supermap &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/okxtmg/gitlab_project_using_gitlab_integration/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/okxtmg/gitlab_project_using_gitlab_integration/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_okxtmg</id>
    <link href="https://www.reddit.com/r/git/comments/okxtmg/gitlab_project_using_gitlab_integration/"></link>
    <updated>2021-07-15T17:40:06+00:00</updated>
    <published>2021-07-15T17:40:06+00:00</published>
    <title>Gitlab project using gitlab integration</title>
  </entry>
  <entry>
    <author>
      <name>/u/tangara888</name>
      <uri>https://www.reddit.com/user/tangara888</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi,&lt;/p&gt; &lt;p&gt;I would like to find out if it is possible to know how the code looks like before it is being pushed to the feature branch ?&lt;/p&gt; &lt;p&gt;So, I presume it will be the master branch - the git clone URL that appeared at the left hand side of the menu?&lt;/p&gt; &lt;p&gt;If I had did the following commands :&lt;/p&gt; &lt;p&gt;git clone URLName&lt;/p&gt; &lt;p&gt;git checkout -b the feature branch name&lt;/p&gt; &lt;p&gt;In my IDE or at the folder where the code is kept, is there a git command that can execute, it will make the code go back to the one before the last commit ?&lt;/p&gt; &lt;p&gt;And then after seeing the code, go back again.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/tangara888"&gt; /u/tangara888 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogya0p/what_is_the_command_to_find_out_the_code_before/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogya0p/what_is_the_command_to_find_out_the_code_before/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ogya0p</id>
    <link href="https://www.reddit.com/r/git/comments/ogya0p/what_is_the_command_to_find_out_the_code_before/"></link>
    <updated>2021-07-09T15:45:07+00:00</updated>
    <published>2021-07-09T15:45:07+00:00</published>
    <title>what is the command to find out the code before the last commit ?</title>
  </entry>
  <entry>
    <author>
      <name>/u/teegrizzz</name>
      <uri>https://www.reddit.com/user/teegrizzz</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am very new to git and I need this question answered because github desktop has a UI and has git functionalities. Also when you use git, do you have to connect to github?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/teegrizzz"&gt; /u/teegrizzz &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/okx06o/why_do_people_use_git_instead_of_github_desktop/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/okx06o/why_do_people_use_git_instead_of_github_desktop/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_okx06o</id>
    <link href="https://www.reddit.com/r/git/comments/okx06o/why_do_people_use_git_instead_of_github_desktop/"></link>
    <updated>2021-07-15T16:59:57+00:00</updated>
    <published>2021-07-15T16:59:57+00:00</published>
    <title>Why do people use git instead of github desktop?</title>
  </entry>
  <entry>
    <author>
      <name>/u/themoo1986</name>
      <uri>https://www.reddit.com/user/themoo1986</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi everyone,&lt;/p&gt; &lt;p&gt;Sorry if this is a noob question:&lt;/p&gt; &lt;p&gt;I&amp;#39;m trying to backup a folder with many individual repos:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;parent folder with .git - sub folder 1 with .git - sub folder 2 with .git - sub folder 3 with .git &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Git is seeing the subfolders as submodules and ignores them on &lt;/p&gt; &lt;pre&gt;&lt;code&gt;git add . &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;I want to include all subfolders and pretend they do not have .git folders of their own. (I know I&amp;#39;m double version controlling the files by doing so).&lt;/p&gt; &lt;p&gt;How do I make this happen? Thanks in advance! &amp;lt;3&lt;/p&gt; &lt;p&gt;&amp;#x200B;&lt;/p&gt; &lt;p&gt;---&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Why do I want to do this?&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;I want to have my work folder be backed-up to a NAS using git version controlling so I can switch back to a commit on date X. Doing a full backup of the entire work folder gives me redundancy in case I cannot access the individual repos for whatever reason.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/themoo1986"&gt; /u/themoo1986 &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omtquv/using_git_to_backup_folder_with_multiple_git_repos/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/omtquv/using_git_to_backup_folder_with_multiple_git_repos/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_omtquv</id>
    <link href="https://www.reddit.com/r/git/comments/omtquv/using_git_to_backup_folder_with_multiple_git_repos/"></link>
    <updated>2021-07-18T16:21:59+00:00</updated>
    <published>2021-07-18T16:21:59+00:00</published>
    <title>Using git to backup folder with multiple git repos</title>
  </entry>
  <entry>
    <author>
      <name>/u/thumbsdrivesmecrazy</name>
      <uri>https://www.reddit.com/user/thumbsdrivesmecrazy</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;bipp is lightweight and agile from day one - to achieve this, it balanced the benefits of a simple monolithic architecture on one hand with a modern microservice-based approach: &lt;a href="https://bipp.io/blog/modern-software-architecture/"&gt;How bipp Used Modern Software Architecture to Build a Better BI Platform&lt;/a&gt;&lt;/p&gt; &lt;p&gt;As a modern addition the tool incorporated the Git distributed version control system for SQL code. The platform used Git to manage changes offline and get complete control over the codebase. This turns a customer’s data models and SQL queries into living entities to always access the latest version. You can also record changes to a file or set of files over time so that you can recall specific versions later.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/thumbsdrivesmecrazy"&gt; /u/thumbsdrivesmecrazy &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ol9ye8/how_bipp_used_modern_software_architecture_for_bi/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ol9ye8/how_bipp_used_modern_software_architecture_for_bi/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ol9ye8</id>
    <link href="https://www.reddit.com/r/git/comments/ol9ye8/how_bipp_used_modern_software_architecture_for_bi/"></link>
    <updated>2021-07-16T04:57:59+00:00</updated>
    <published>2021-07-16T04:57:59+00:00</published>
    <title>How bipp Used Modern Software Architecture For BI Platform - Git Back to Where We Once Belonged</title>
  </entry>
  <entry>
    <author>
      <name>/u/vermiculus</name>
      <uri>https://www.reddit.com/user/vermiculus</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I’m a Magit fan myself, but I find myself with the challenge of finding a more ‘point and click’ option for Windows. However, I’ve written several custom subcommands to perform source management tasks that have no direct analog in git. (These interact with home-grown software that drives many of our processes today and is in fact irreplaceable.)&lt;/p&gt; &lt;p&gt;I’m going a little nuts trying to find a Windows GUI for which I can write plugins to interact with (or even just invoke) our custom subcommands – free or paid. Does such a thing exist?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/vermiculus"&gt; /u/vermiculus &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogm9te/is_there_any_mature_standalone_gui_out_there_for/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ogm9te/is_there_any_mature_standalone_gui_out_there_for/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ogm9te</id>
    <link href="https://www.reddit.com/r/git/comments/ogm9te/is_there_any_mature_standalone_gui_out_there_for/"></link>
    <updated>2021-07-09T02:34:32+00:00</updated>
    <published>2021-07-09T02:34:32+00:00</published>
    <title>Is there any mature, standalone GUI out there for which I could write needed plug-ins?</title>
  </entry>
  <entry>
    <author>
      <name>/u/willybombz</name>
      <uri>https://www.reddit.com/user/willybombz</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;m using Git primarily for hosting public code (not collaboration). The code I&amp;#39;m uploading doesn&amp;#39;t require &lt;code&gt;git clone&lt;/code&gt; for installation either. It uses a custom installation script instead.&lt;/p&gt; &lt;p&gt;The idea is to render all previous versions of the software obsolete when new code is pushed to production.&lt;/p&gt; &lt;p&gt;Here&amp;#39;s the process I use:&lt;/p&gt; &lt;p&gt;&lt;code&gt;sudo git checkout repository&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;cd repository&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;sudo git checkout --orphan erase&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;sudo git commit -m &amp;quot;Release&amp;quot;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;sudo git push origin erase&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;# Set erase branch as default on GitHub&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;sudo git push origin --delete master&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;# Rename erase branch to master on GitHub&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Here&amp;#39;s an example repository where I&amp;#39;m doing this: &lt;a href="https://github.com/willybombz/overlord"&gt;https://github.com/willybombz/overlord&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Instead of adding automatic updates (which is considered a backdoor in a product focused on security), users can clone/fork the main repository in a staging environment or add the .git file after installation.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/willybombz"&gt; /u/willybombz &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/of11gf/will_git_users_ostracize_me_for_deleting_the_main/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/of11gf/will_git_users_ostracize_me_for_deleting_the_main/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_of11gf</id>
    <link href="https://www.reddit.com/r/git/comments/of11gf/will_git_users_ostracize_me_for_deleting_the_main/"></link>
    <updated>2021-07-06T18:33:31+00:00</updated>
    <published>2021-07-06T18:33:31+00:00</published>
    <title>Will Git users ostracize me for deleting the main branch's commit history periodically?</title>
  </entry>
  <entry>
    <author>
      <name>/u/yusufDev</name>
      <uri>https://www.reddit.com/user/yusufDev</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;How can git store all of the different branches and the status of the project in every commit without the changing the size of the codebase ? I presume this is all done in the .git folder but I dont understand how that can be done.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/yusufDev"&gt; /u/yusufDev &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ol14sq/question_about_the_way_git_stores_repos/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ol14sq/question_about_the_way_git_stores_repos/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ol14sq</id>
    <link href="https://www.reddit.com/r/git/comments/ol14sq/question_about_the_way_git_stores_repos/"></link>
    <updated>2021-07-15T20:24:21+00:00</updated>
    <published>2021-07-15T20:24:21+00:00</published>
    <title>Question about the way git stores repos</title>
  </entry>
  <entry>
    <author>
      <name>/u/yusufDev</name>
      <uri>https://www.reddit.com/user/yusufDev</uri>
    </author>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am currently using arch, and I work with git everyday, but almost the only thing I now, is committing changes and pushing them. I dont even now how to link a repo with github or move between changes and still have to look up the &lt;code&gt;set remove origin stuff&lt;/code&gt; and that kind of things. I have tried many tutorials but I always get stuck when they start talking about HEAD and moving between different branches and commits so what is the solution ? do you recommend any particular tutorial series ?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://www.reddit.com/user/yusufDev"&gt; /u/yusufDev &lt;/a&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ojcmxd/why_is_git_so_damm_hard_to_learn/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/ojcmxd/why_is_git_so_damm_hard_to_learn/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_ojcmxd</id>
    <link href="https://www.reddit.com/r/git/comments/ojcmxd/why_is_git_so_damm_hard_to_learn/"></link>
    <updated>2021-07-13T10:15:19+00:00</updated>
    <published>2021-07-13T10:15:19+00:00</published>
    <title>Why is git so damm hard to learn</title>
  </entry>
  <entry>
    <category term="git" label="r/git"></category>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi everyone, I am trying to write a bash script that is going to sync a very long list of git repositories. Is there a way to run git checkout &amp;lt;commit&amp;gt; on a repository from outside that repo on the command line?&lt;/p&gt; &lt;p&gt;ex: I want to run git checkout 9aee39... on a repo named reddit/askprogramming/post, and I&amp;#39;m in directory root (with the full path being root/reddit/askprogramming/post) is there any way to run this command on this repo without navigating to root/reddit/askprogramming/post first? The issue I&amp;#39;m having is my script can normally navigate to this repo and then run the command by just&lt;/p&gt; &lt;p&gt;cd reddit/askprogramming/post&lt;/p&gt; &lt;p&gt;git checkout &amp;lt;commit&amp;gt;&lt;/p&gt; &lt;p&gt;but this doesn&amp;#39;t work with all of my repos, as some of them are named something slightly different (e.g. repo name: reddit/ask_programming/post and actual path is reddit/ask/programming/post or other variations)&lt;/p&gt; &lt;p&gt;thanks!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &lt;br/&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oii5m1/how_to_git_checkout_commit_on_repo_from_command/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://www.reddit.com/r/git/comments/oii5m1/how_to_git_checkout_commit_on_repo_from_command/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <id>t3_oii5m1</id>
    <link href="https://www.reddit.com/r/git/comments/oii5m1/how_to_git_checkout_commit_on_repo_from_command/"></link>
    <updated>2021-07-12T02:30:44+00:00</updated>
    <published>2021-07-12T02:30:44+00:00</published>
    <title>How to git checkout &lt;commit&gt; on repo from command line while in a directory outside of the repo?</title>
  </entry>
</feed>
